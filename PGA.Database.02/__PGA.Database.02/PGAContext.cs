#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PGA.Database._02
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\Users\\Daryl-Win-8\\AppData\\Local\\Temp\\PGA.sdf")]
	public partial class PGAContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCommandStack(CommandStack instance);
    partial void UpdateCommandStack(CommandStack instance);
    partial void DeleteCommandStack(CommandStack instance);
    partial void InsertGlobalSettings(GlobalSettings instance);
    partial void UpdateGlobalSettings(GlobalSettings instance);
    partial void DeleteGlobalSettings(GlobalSettings instance);
    partial void InsertLogs(Logs instance);
    partial void UpdateLogs(Logs instance);
    partial void DeleteLogs(Logs instance);
    partial void InsertPointCloud(PointCloud instance);
    partial void UpdatePointCloud(PointCloud instance);
    partial void DeletePointCloud(PointCloud instance);
    partial void InsertPolyline(Polyline instance);
    partial void UpdatePolyline(Polyline instance);
    partial void DeletePolyline(Polyline instance);
    partial void InsertPolylineChildren(PolylineChildren instance);
    partial void UpdatePolylineChildren(PolylineChildren instance);
    partial void DeletePolylineChildren(PolylineChildren instance);
    partial void InsertPolylineDWGS(PolylineDWGS instance);
    partial void UpdatePolylineDWGS(PolylineDWGS instance);
    partial void DeletePolylineDWGS(PolylineDWGS instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertSourceDrawingInfo(SourceDrawingInfo instance);
    partial void UpdateSourceDrawingInfo(SourceDrawingInfo instance);
    partial void DeleteSourceDrawingInfo(SourceDrawingInfo instance);
    partial void InsertTasks(Tasks instance);
    partial void UpdateTasks(Tasks instance);
    partial void DeleteTasks(Tasks instance);
    #endregion
		
		public PGAContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PGAContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PGAContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PGAContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CommandStack> CommandStack
		{
			get
			{
				return this.GetTable<CommandStack>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSettings> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSettings>();
			}
		}
		
		public System.Data.Linq.Table<Logs> Logs
		{
			get
			{
				return this.GetTable<Logs>();
			}
		}
		
		public System.Data.Linq.Table<PointCloud> PointCloud
		{
			get
			{
				return this.GetTable<PointCloud>();
			}
		}
		
		public System.Data.Linq.Table<Polyline> Polyline
		{
			get
			{
				return this.GetTable<Polyline>();
			}
		}
		
		public System.Data.Linq.Table<PolylineChildren> PolylineChildren
		{
			get
			{
				return this.GetTable<PolylineChildren>();
			}
		}
		
		public System.Data.Linq.Table<PolylineDWGS> PolylineDWGS
		{
			get
			{
				return this.GetTable<PolylineDWGS>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<SourceDrawingInfo> SourceDrawingInfo
		{
			get
			{
				return this.GetTable<SourceDrawingInfo>();
			}
		}
		
		public System.Data.Linq.Table<Tasks> Tasks
		{
			get
			{
				return this.GetTable<Tasks>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CommandStack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Commands;
		
		private string _Function;
		
		private System.Nullable<bool> _IsInvoked;
		
		private System.Nullable<bool> _IsRunning;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<bool> _HasError;
		
		private System.Nullable<System.DateTime> _TimeStarted;
		
		private System.Nullable<System.DateTime> _TimeCompleted;
		
		private System.Nullable<long> _SelectionSetID;
		
		private System.Nullable<long> _SourceDWGID;
		
		private System.Nullable<long> _SourceDWGGui;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommandsChanging(string value);
    partial void OnCommandsChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnIsInvokedChanging(System.Nullable<bool> value);
    partial void OnIsInvokedChanged();
    partial void OnIsRunningChanging(System.Nullable<bool> value);
    partial void OnIsRunningChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnHasErrorChanging(System.Nullable<bool> value);
    partial void OnHasErrorChanged();
    partial void OnTimeStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartedChanged();
    partial void OnTimeCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeCompletedChanged();
    partial void OnSelectionSetIDChanging(System.Nullable<long> value);
    partial void OnSelectionSetIDChanged();
    partial void OnSourceDWGIDChanging(System.Nullable<long> value);
    partial void OnSourceDWGIDChanged();
    partial void OnSourceDWGGuiChanging(System.Nullable<long> value);
    partial void OnSourceDWGGuiChanged();
    #endregion
		
		public CommandStack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commands", DbType="NVarChar(500)")]
		public string Commands
		{
			get
			{
				return this._Commands;
			}
			set
			{
				if ((this._Commands != value))
				{
					this.OnCommandsChanging(value);
					this.SendPropertyChanging();
					this._Commands = value;
					this.SendPropertyChanged("Commands");
					this.OnCommandsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function", DbType="NVarChar(100)")]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoked", DbType="Bit")]
		public System.Nullable<bool> IsInvoked
		{
			get
			{
				return this._IsInvoked;
			}
			set
			{
				if ((this._IsInvoked != value))
				{
					this.OnIsInvokedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoked = value;
					this.SendPropertyChanged("IsInvoked");
					this.OnIsInvokedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRunning", DbType="Bit")]
		public System.Nullable<bool> IsRunning
		{
			get
			{
				return this._IsRunning;
			}
			set
			{
				if ((this._IsRunning != value))
				{
					this.OnIsRunningChanging(value);
					this.SendPropertyChanging();
					this._IsRunning = value;
					this.SendPropertyChanged("IsRunning");
					this.OnIsRunningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit")]
		public System.Nullable<bool> HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStarted
		{
			get
			{
				return this._TimeStarted;
			}
			set
			{
				if ((this._TimeStarted != value))
				{
					this.OnTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._TimeStarted = value;
					this.SendPropertyChanged("TimeStarted");
					this.OnTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeCompleted
		{
			get
			{
				return this._TimeCompleted;
			}
			set
			{
				if ((this._TimeCompleted != value))
				{
					this.OnTimeCompletedChanging(value);
					this.SendPropertyChanging();
					this._TimeCompleted = value;
					this.SendPropertyChanged("TimeCompleted");
					this.OnTimeCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectionSetID", DbType="BigInt")]
		public System.Nullable<long> SelectionSetID
		{
			get
			{
				return this._SelectionSetID;
			}
			set
			{
				if ((this._SelectionSetID != value))
				{
					this.OnSelectionSetIDChanging(value);
					this.SendPropertyChanging();
					this._SelectionSetID = value;
					this.SendPropertyChanged("SelectionSetID");
					this.OnSelectionSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDWGID", DbType="BigInt")]
		public System.Nullable<long> SourceDWGID
		{
			get
			{
				return this._SourceDWGID;
			}
			set
			{
				if ((this._SourceDWGID != value))
				{
					this.OnSourceDWGIDChanging(value);
					this.SendPropertyChanging();
					this._SourceDWGID = value;
					this.SendPropertyChanged("SourceDWGID");
					this.OnSourceDWGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDWGGui", DbType="BigInt")]
		public System.Nullable<long> SourceDWGGui
		{
			get
			{
				return this._SourceDWGGui;
			}
			set
			{
				if ((this._SourceDWGGui != value))
				{
					this.OnSourceDWGGuiChanging(value);
					this.SendPropertyChanging();
					this._SourceDWGGui = value;
					this.SendPropertyChanged("SourceDWGGui");
					this.OnSourceDWGGuiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class GlobalSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PointsPath;
		
		private string _PolylinePath;
		
		private string _SourceDWG;
		
		private string _ServerName;
		
		private string _ServerPath;
		
		private string _EmailAddress;
		
		private string _EmailServer;
		
		private string _EmailPort;
		
		private string _EmailUserName;
		
		private string _EmailPassword;
		
		private System.Nullable<bool> _IsEmailSecured;
		
		private System.Nullable<bool> _IsAttachment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPointsPathChanging(string value);
    partial void OnPointsPathChanged();
    partial void OnPolylinePathChanging(string value);
    partial void OnPolylinePathChanged();
    partial void OnSourceDWGChanging(string value);
    partial void OnSourceDWGChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnServerPathChanging(string value);
    partial void OnServerPathChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnEmailServerChanging(string value);
    partial void OnEmailServerChanged();
    partial void OnEmailPortChanging(string value);
    partial void OnEmailPortChanged();
    partial void OnEmailUserNameChanging(string value);
    partial void OnEmailUserNameChanged();
    partial void OnEmailPasswordChanging(string value);
    partial void OnEmailPasswordChanged();
    partial void OnIsEmailSecuredChanging(System.Nullable<bool> value);
    partial void OnIsEmailSecuredChanged();
    partial void OnIsAttachmentChanging(System.Nullable<bool> value);
    partial void OnIsAttachmentChanged();
    #endregion
		
		public GlobalSettings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPath", DbType="NVarChar(200)")]
		public string PointsPath
		{
			get
			{
				return this._PointsPath;
			}
			set
			{
				if ((this._PointsPath != value))
				{
					this.OnPointsPathChanging(value);
					this.SendPropertyChanging();
					this._PointsPath = value;
					this.SendPropertyChanged("PointsPath");
					this.OnPointsPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolylinePath", DbType="NVarChar(200)")]
		public string PolylinePath
		{
			get
			{
				return this._PolylinePath;
			}
			set
			{
				if ((this._PolylinePath != value))
				{
					this.OnPolylinePathChanging(value);
					this.SendPropertyChanging();
					this._PolylinePath = value;
					this.SendPropertyChanged("PolylinePath");
					this.OnPolylinePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDWG", DbType="NVarChar(200)")]
		public string SourceDWG
		{
			get
			{
				return this._SourceDWG;
			}
			set
			{
				if ((this._SourceDWG != value))
				{
					this.OnSourceDWGChanging(value);
					this.SendPropertyChanging();
					this._SourceDWG = value;
					this.SendPropertyChanged("SourceDWG");
					this.OnSourceDWGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(100)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPath", DbType="NVarChar(100)")]
		public string ServerPath
		{
			get
			{
				return this._ServerPath;
			}
			set
			{
				if ((this._ServerPath != value))
				{
					this.OnServerPathChanging(value);
					this.SendPropertyChanging();
					this._ServerPath = value;
					this.SendPropertyChanged("ServerPath");
					this.OnServerPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailServer", DbType="NVarChar(100)")]
		public string EmailServer
		{
			get
			{
				return this._EmailServer;
			}
			set
			{
				if ((this._EmailServer != value))
				{
					this.OnEmailServerChanging(value);
					this.SendPropertyChanging();
					this._EmailServer = value;
					this.SendPropertyChanged("EmailServer");
					this.OnEmailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPort", DbType="NVarChar(100)")]
		public string EmailPort
		{
			get
			{
				return this._EmailPort;
			}
			set
			{
				if ((this._EmailPort != value))
				{
					this.OnEmailPortChanging(value);
					this.SendPropertyChanging();
					this._EmailPort = value;
					this.SendPropertyChanged("EmailPort");
					this.OnEmailPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailUserName", DbType="NVarChar(100)")]
		public string EmailUserName
		{
			get
			{
				return this._EmailUserName;
			}
			set
			{
				if ((this._EmailUserName != value))
				{
					this.OnEmailUserNameChanging(value);
					this.SendPropertyChanging();
					this._EmailUserName = value;
					this.SendPropertyChanged("EmailUserName");
					this.OnEmailUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPassword", DbType="NVarChar(100)")]
		public string EmailPassword
		{
			get
			{
				return this._EmailPassword;
			}
			set
			{
				if ((this._EmailPassword != value))
				{
					this.OnEmailPasswordChanging(value);
					this.SendPropertyChanging();
					this._EmailPassword = value;
					this.SendPropertyChanged("EmailPassword");
					this.OnEmailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailSecured", DbType="Bit")]
		public System.Nullable<bool> IsEmailSecured
		{
			get
			{
				return this._IsEmailSecured;
			}
			set
			{
				if ((this._IsEmailSecured != value))
				{
					this.OnIsEmailSecuredChanging(value);
					this.SendPropertyChanging();
					this._IsEmailSecured = value;
					this.SendPropertyChanged("IsEmailSecured");
					this.OnIsEmailSecuredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttachment", DbType="Bit")]
		public System.Nullable<bool> IsAttachment
		{
			get
			{
				return this._IsAttachment;
			}
			set
			{
				if ((this._IsAttachment != value))
				{
					this.OnIsAttachmentChanging(value);
					this.SendPropertyChanging();
					this._IsAttachment = value;
					this.SendPropertyChanged("IsAttachment");
					this.OnIsAttachmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Logs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DateStamp;
		
		private string _Issue;
		
		private string _DrawingID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(string value);
    partial void OnDateStampChanged();
    partial void OnIssueChanging(string value);
    partial void OnIssueChanged();
    partial void OnDrawingIDChanging(string value);
    partial void OnDrawingIDChanged();
    #endregion
		
		public Logs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issue", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this.OnIssueChanging(value);
					this.SendPropertyChanging();
					this._Issue = value;
					this.SendPropertyChanged("Issue");
					this.OnIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingID", DbType="NChar(50)")]
		public string DrawingID
		{
			get
			{
				return this._DrawingID;
			}
			set
			{
				if ((this._DrawingID != value))
				{
					this.OnDrawingIDChanging(value);
					this.SendPropertyChanging();
					this._DrawingID = value;
					this.SendPropertyChanged("DrawingID");
					this.OnDrawingIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PointCloud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingGUI;
		
		private string _SourcePath;
		
		private string _DestinationPath;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _DateLoaded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingGUIChanging(string value);
    partial void OnDrawingGUIChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnDestinationPathChanging(string value);
    partial void OnDestinationPathChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnDateLoadedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoadedChanged();
    #endregion
		
		public PointCloud()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingGUI", DbType="NVarChar(50)")]
		public string DrawingGUI
		{
			get
			{
				return this._DrawingGUI;
			}
			set
			{
				if ((this._DrawingGUI != value))
				{
					this.OnDrawingGUIChanging(value);
					this.SendPropertyChanging();
					this._DrawingGUI = value;
					this.SendPropertyChanged("DrawingGUI");
					this.OnDrawingGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="NVarChar(200)")]
		public string SourcePath
		{
			get
			{
				return this._SourcePath;
			}
			set
			{
				if ((this._SourcePath != value))
				{
					this.OnSourcePathChanging(value);
					this.SendPropertyChanging();
					this._SourcePath = value;
					this.SendPropertyChanged("SourcePath");
					this.OnSourcePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPath", DbType="NVarChar(200)")]
		public string DestinationPath
		{
			get
			{
				return this._DestinationPath;
			}
			set
			{
				if ((this._DestinationPath != value))
				{
					this.OnDestinationPathChanging(value);
					this.SendPropertyChanging();
					this._DestinationPath = value;
					this.SendPropertyChanged("DestinationPath");
					this.OnDestinationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLoaded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLoaded
		{
			get
			{
				return this._DateLoaded;
			}
			set
			{
				if ((this._DateLoaded != value))
				{
					this.OnDateLoadedChanging(value);
					this.SendPropertyChanging();
					this._DateLoaded = value;
					this.SendPropertyChanged("DateLoaded");
					this.OnDateLoadedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Polyline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingID;
		
		private string _Handle;
		
		private string _ObejctId;
		
		private string _Level;
		
		private string _Nodes;
		
		private string _Layer;
		
		private string _Area;
		
		private string _Length;
		
		private string _Geometry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingIDChanging(string value);
    partial void OnDrawingIDChanged();
    partial void OnHandleChanging(string value);
    partial void OnHandleChanged();
    partial void OnObejctIdChanging(string value);
    partial void OnObejctIdChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnNodesChanging(string value);
    partial void OnNodesChanged();
    partial void OnLayerChanging(string value);
    partial void OnLayerChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnLengthChanging(string value);
    partial void OnLengthChanged();
    partial void OnGeometryChanging(string value);
    partial void OnGeometryChanged();
    #endregion
		
		public Polyline()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingID", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string DrawingID
		{
			get
			{
				return this._DrawingID;
			}
			set
			{
				if ((this._DrawingID != value))
				{
					this.OnDrawingIDChanging(value);
					this.SendPropertyChanging();
					this._DrawingID = value;
					this.SendPropertyChanged("DrawingID");
					this.OnDrawingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handle", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Handle
		{
			get
			{
				return this._Handle;
			}
			set
			{
				if ((this._Handle != value))
				{
					this.OnHandleChanging(value);
					this.SendPropertyChanging();
					this._Handle = value;
					this.SendPropertyChanged("Handle");
					this.OnHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObejctId", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string ObejctId
		{
			get
			{
				return this._ObejctId;
			}
			set
			{
				if ((this._ObejctId != value))
				{
					this.OnObejctIdChanging(value);
					this.SendPropertyChanging();
					this._ObejctId = value;
					this.SendPropertyChanged("ObejctId");
					this.OnObejctIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nodes", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Nodes
		{
			get
			{
				return this._Nodes;
			}
			set
			{
				if ((this._Nodes != value))
				{
					this.OnNodesChanging(value);
					this.SendPropertyChanging();
					this._Nodes = value;
					this.SendPropertyChanged("Nodes");
					this.OnNodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Layer
		{
			get
			{
				return this._Layer;
			}
			set
			{
				if ((this._Layer != value))
				{
					this.OnLayerChanging(value);
					this.SendPropertyChanging();
					this._Layer = value;
					this.SendPropertyChanged("Layer");
					this.OnLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geometry", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Geometry
		{
			get
			{
				return this._Geometry;
			}
			set
			{
				if ((this._Geometry != value))
				{
					this.OnGeometryChanging(value);
					this.SendPropertyChanging();
					this._Geometry = value;
					this.SendPropertyChanged("Geometry");
					this.OnGeometryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PolylineChildren : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _PolylineParentID;
		
		private string _PolylineChildrenID;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<long> _PolylineID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPolylineParentIDChanging(long value);
    partial void OnPolylineParentIDChanged();
    partial void OnPolylineChildrenIDChanging(string value);
    partial void OnPolylineChildrenIDChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnPolylineIDChanging(System.Nullable<long> value);
    partial void OnPolylineIDChanged();
    #endregion
		
		public PolylineChildren()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolylineParentID", DbType="BigInt NOT NULL")]
		public long PolylineParentID
		{
			get
			{
				return this._PolylineParentID;
			}
			set
			{
				if ((this._PolylineParentID != value))
				{
					this.OnPolylineParentIDChanging(value);
					this.SendPropertyChanging();
					this._PolylineParentID = value;
					this.SendPropertyChanged("PolylineParentID");
					this.OnPolylineParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolylineChildrenID", DbType="NVarChar(50)")]
		public string PolylineChildrenID
		{
			get
			{
				return this._PolylineChildrenID;
			}
			set
			{
				if ((this._PolylineChildrenID != value))
				{
					this.OnPolylineChildrenIDChanging(value);
					this.SendPropertyChanging();
					this._PolylineChildrenID = value;
					this.SendPropertyChanged("PolylineChildrenID");
					this.OnPolylineChildrenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolylineID", DbType="BigInt")]
		public System.Nullable<long> PolylineID
		{
			get
			{
				return this._PolylineID;
			}
			set
			{
				if ((this._PolylineID != value))
				{
					this.OnPolylineIDChanging(value);
					this.SendPropertyChanging();
					this._PolylineID = value;
					this.SendPropertyChanged("PolylineID");
					this.OnPolylineIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PolylineDWGS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingGUI;
		
		private string _SourcePath;
		
		private string _DestinationPath;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _DateLoaded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingGUIChanging(string value);
    partial void OnDrawingGUIChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnDestinationPathChanging(string value);
    partial void OnDestinationPathChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnDateLoadedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoadedChanged();
    #endregion
		
		public PolylineDWGS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingGUI", DbType="NVarChar(50)")]
		public string DrawingGUI
		{
			get
			{
				return this._DrawingGUI;
			}
			set
			{
				if ((this._DrawingGUI != value))
				{
					this.OnDrawingGUIChanging(value);
					this.SendPropertyChanging();
					this._DrawingGUI = value;
					this.SendPropertyChanged("DrawingGUI");
					this.OnDrawingGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="NVarChar(200)")]
		public string SourcePath
		{
			get
			{
				return this._SourcePath;
			}
			set
			{
				if ((this._SourcePath != value))
				{
					this.OnSourcePathChanging(value);
					this.SendPropertyChanging();
					this._SourcePath = value;
					this.SendPropertyChanged("SourcePath");
					this.OnSourcePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPath", DbType="NVarChar(200)")]
		public string DestinationPath
		{
			get
			{
				return this._DestinationPath;
			}
			set
			{
				if ((this._DestinationPath != value))
				{
					this.OnDestinationPathChanging(value);
					this.SendPropertyChanging();
					this._DestinationPath = value;
					this.SendPropertyChanged("DestinationPath");
					this.OnDestinationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLoaded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLoaded
		{
			get
			{
				return this._DateLoaded;
			}
			set
			{
				if ((this._DateLoaded != value))
				{
					this.OnDateLoadedChanging(value);
					this.SendPropertyChanging();
					this._DateLoaded = value;
					this.SendPropertyChanged("DateLoaded");
					this.OnDateLoadedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _GlobalPointFilePath;
		
		private string _GlobalPolylineFilePath;
		
		private string _TemplateDWG;
		
		private string _SeverPath;
		
		private string _CourseName;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _DestinationFolder;
		
		private System.Nullable<bool> _CreateDXF;
		
		private string _DestDXFFolder;
		
		private string _ProjectName;
		
		private string _ProjectCity;
		
		private string _ProjectState;
		
		private System.Nullable<System.DateTime> _ProjectDate;
		
		private string _ProjectCreator;
		
		private string _ProjectManager;
		
		private string _ProjectSurveyor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlobalPointFilePathChanging(string value);
    partial void OnGlobalPointFilePathChanged();
    partial void OnGlobalPolylineFilePathChanging(string value);
    partial void OnGlobalPolylineFilePathChanged();
    partial void OnTemplateDWGChanging(string value);
    partial void OnTemplateDWGChanged();
    partial void OnSeverPathChanging(string value);
    partial void OnSeverPathChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnDestinationFolderChanging(string value);
    partial void OnDestinationFolderChanged();
    partial void OnCreateDXFChanging(System.Nullable<bool> value);
    partial void OnCreateDXFChanged();
    partial void OnDestDXFFolderChanging(string value);
    partial void OnDestDXFFolderChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectCityChanging(string value);
    partial void OnProjectCityChanged();
    partial void OnProjectStateChanging(string value);
    partial void OnProjectStateChanged();
    partial void OnProjectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectDateChanged();
    partial void OnProjectCreatorChanging(string value);
    partial void OnProjectCreatorChanged();
    partial void OnProjectManagerChanging(string value);
    partial void OnProjectManagerChanged();
    partial void OnProjectSurveyorChanging(string value);
    partial void OnProjectSurveyorChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalPointFilePath", DbType="NVarChar(200)")]
		public string GlobalPointFilePath
		{
			get
			{
				return this._GlobalPointFilePath;
			}
			set
			{
				if ((this._GlobalPointFilePath != value))
				{
					this.OnGlobalPointFilePathChanging(value);
					this.SendPropertyChanging();
					this._GlobalPointFilePath = value;
					this.SendPropertyChanged("GlobalPointFilePath");
					this.OnGlobalPointFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalPolylineFilePath", DbType="NVarChar(200)")]
		public string GlobalPolylineFilePath
		{
			get
			{
				return this._GlobalPolylineFilePath;
			}
			set
			{
				if ((this._GlobalPolylineFilePath != value))
				{
					this.OnGlobalPolylineFilePathChanging(value);
					this.SendPropertyChanging();
					this._GlobalPolylineFilePath = value;
					this.SendPropertyChanged("GlobalPolylineFilePath");
					this.OnGlobalPolylineFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateDWG", DbType="NVarChar(200)")]
		public string TemplateDWG
		{
			get
			{
				return this._TemplateDWG;
			}
			set
			{
				if ((this._TemplateDWG != value))
				{
					this.OnTemplateDWGChanging(value);
					this.SendPropertyChanging();
					this._TemplateDWG = value;
					this.SendPropertyChanged("TemplateDWG");
					this.OnTemplateDWGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverPath", DbType="NVarChar(200)")]
		public string SeverPath
		{
			get
			{
				return this._SeverPath;
			}
			set
			{
				if ((this._SeverPath != value))
				{
					this.OnSeverPathChanging(value);
					this.SendPropertyChanging();
					this._SeverPath = value;
					this.SendPropertyChanged("SeverPath");
					this.OnSeverPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(50)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationFolder", DbType="NVarChar(200)")]
		public string DestinationFolder
		{
			get
			{
				return this._DestinationFolder;
			}
			set
			{
				if ((this._DestinationFolder != value))
				{
					this.OnDestinationFolderChanging(value);
					this.SendPropertyChanging();
					this._DestinationFolder = value;
					this.SendPropertyChanged("DestinationFolder");
					this.OnDestinationFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDXF", DbType="Bit")]
		public System.Nullable<bool> CreateDXF
		{
			get
			{
				return this._CreateDXF;
			}
			set
			{
				if ((this._CreateDXF != value))
				{
					this.OnCreateDXFChanging(value);
					this.SendPropertyChanging();
					this._CreateDXF = value;
					this.SendPropertyChanged("CreateDXF");
					this.OnCreateDXFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestDXFFolder", DbType="NVarChar(200)")]
		public string DestDXFFolder
		{
			get
			{
				return this._DestDXFFolder;
			}
			set
			{
				if ((this._DestDXFFolder != value))
				{
					this.OnDestDXFFolderChanging(value);
					this.SendPropertyChanging();
					this._DestDXFFolder = value;
					this.SendPropertyChanged("DestDXFFolder");
					this.OnDestDXFFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(250)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCity", DbType="NVarChar(250)")]
		public string ProjectCity
		{
			get
			{
				return this._ProjectCity;
			}
			set
			{
				if ((this._ProjectCity != value))
				{
					this.OnProjectCityChanging(value);
					this.SendPropertyChanging();
					this._ProjectCity = value;
					this.SendPropertyChanged("ProjectCity");
					this.OnProjectCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectState", DbType="NVarChar(250)")]
		public string ProjectState
		{
			get
			{
				return this._ProjectState;
			}
			set
			{
				if ((this._ProjectState != value))
				{
					this.OnProjectStateChanging(value);
					this.SendPropertyChanging();
					this._ProjectState = value;
					this.SendPropertyChanged("ProjectState");
					this.OnProjectStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectDate
		{
			get
			{
				return this._ProjectDate;
			}
			set
			{
				if ((this._ProjectDate != value))
				{
					this.OnProjectDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectDate = value;
					this.SendPropertyChanged("ProjectDate");
					this.OnProjectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCreator", DbType="NVarChar(250)")]
		public string ProjectCreator
		{
			get
			{
				return this._ProjectCreator;
			}
			set
			{
				if ((this._ProjectCreator != value))
				{
					this.OnProjectCreatorChanging(value);
					this.SendPropertyChanging();
					this._ProjectCreator = value;
					this.SendPropertyChanged("ProjectCreator");
					this.OnProjectCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectManager", DbType="NVarChar(250)")]
		public string ProjectManager
		{
			get
			{
				return this._ProjectManager;
			}
			set
			{
				if ((this._ProjectManager != value))
				{
					this.OnProjectManagerChanging(value);
					this.SendPropertyChanging();
					this._ProjectManager = value;
					this.SendPropertyChanged("ProjectManager");
					this.OnProjectManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectSurveyor", DbType="NVarChar(250)")]
		public string ProjectSurveyor
		{
			get
			{
				return this._ProjectSurveyor;
			}
			set
			{
				if ((this._ProjectSurveyor != value))
				{
					this.OnProjectSurveyorChanging(value);
					this.SendPropertyChanging();
					this._ProjectSurveyor = value;
					this.SendPropertyChanged("ProjectSurveyor");
					this.OnProjectSurveyorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class SourceDrawingInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingPath;
		
		private string _DrawingGui;
		
		private string _DestinationPath;
		
		private string _TimeStampFile;
		
		private string _TimeStampProcessess;
		
		private string _LastSaveTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingPathChanging(string value);
    partial void OnDrawingPathChanged();
    partial void OnDrawingGuiChanging(string value);
    partial void OnDrawingGuiChanged();
    partial void OnDestinationPathChanging(string value);
    partial void OnDestinationPathChanged();
    partial void OnTimeStampFileChanging(string value);
    partial void OnTimeStampFileChanged();
    partial void OnTimeStampProcessessChanging(string value);
    partial void OnTimeStampProcessessChanged();
    partial void OnLastSaveTimeChanging(string value);
    partial void OnLastSaveTimeChanged();
    #endregion
		
		public SourceDrawingInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingPath", DbType="NVarChar(50)")]
		public string DrawingPath
		{
			get
			{
				return this._DrawingPath;
			}
			set
			{
				if ((this._DrawingPath != value))
				{
					this.OnDrawingPathChanging(value);
					this.SendPropertyChanging();
					this._DrawingPath = value;
					this.SendPropertyChanged("DrawingPath");
					this.OnDrawingPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingGui", DbType="NVarChar(50)")]
		public string DrawingGui
		{
			get
			{
				return this._DrawingGui;
			}
			set
			{
				if ((this._DrawingGui != value))
				{
					this.OnDrawingGuiChanging(value);
					this.SendPropertyChanging();
					this._DrawingGui = value;
					this.SendPropertyChanged("DrawingGui");
					this.OnDrawingGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPath", DbType="NVarChar(50)")]
		public string DestinationPath
		{
			get
			{
				return this._DestinationPath;
			}
			set
			{
				if ((this._DestinationPath != value))
				{
					this.OnDestinationPathChanging(value);
					this.SendPropertyChanging();
					this._DestinationPath = value;
					this.SendPropertyChanged("DestinationPath");
					this.OnDestinationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampFile", DbType="NChar(10)")]
		public string TimeStampFile
		{
			get
			{
				return this._TimeStampFile;
			}
			set
			{
				if ((this._TimeStampFile != value))
				{
					this.OnTimeStampFileChanging(value);
					this.SendPropertyChanging();
					this._TimeStampFile = value;
					this.SendPropertyChanged("TimeStampFile");
					this.OnTimeStampFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampProcessess", DbType="NChar(10)")]
		public string TimeStampProcessess
		{
			get
			{
				return this._TimeStampProcessess;
			}
			set
			{
				if ((this._TimeStampProcessess != value))
				{
					this.OnTimeStampProcessessChanging(value);
					this.SendPropertyChanging();
					this._TimeStampProcessess = value;
					this.SendPropertyChanged("TimeStampProcessess");
					this.OnTimeStampProcessessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSaveTime", DbType="NChar(10)")]
		public string LastSaveTime
		{
			get
			{
				return this._LastSaveTime;
			}
			set
			{
				if ((this._LastSaveTime != value))
				{
					this.OnLastSaveTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSaveTime = value;
					this.SendPropertyChanged("LastSaveTime");
					this.OnLastSaveTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Tasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProjectID;
		
		private System.Nullable<System.DateTime> _TimeStarted;
		
		private System.Nullable<System.DateTime> _TimeEnded;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<bool> _IsPaused;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnTimeStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartedChanged();
    partial void OnTimeEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndedChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsPausedChanging(System.Nullable<bool> value);
    partial void OnIsPausedChanged();
    #endregion
		
		public Tasks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStarted
		{
			get
			{
				return this._TimeStarted;
			}
			set
			{
				if ((this._TimeStarted != value))
				{
					this.OnTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._TimeStarted = value;
					this.SendPropertyChanged("TimeStarted");
					this.OnTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnded
		{
			get
			{
				return this._TimeEnded;
			}
			set
			{
				if ((this._TimeEnded != value))
				{
					this.OnTimeEndedChanging(value);
					this.SendPropertyChanging();
					this._TimeEnded = value;
					this.SendPropertyChanged("TimeEnded");
					this.OnTimeEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaused", DbType="Bit")]
		public System.Nullable<bool> IsPaused
		{
			get
			{
				return this._IsPaused;
			}
			set
			{
				if ((this._IsPaused != value))
				{
					this.OnIsPausedChanging(value);
					this.SendPropertyChanging();
					this._IsPaused = value;
					this.SendPropertyChanged("IsPaused");
					this.OnIsPausedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
