#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PGA.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\Users\\m4800\\AppData\\Local\\Temp\\PGA.sdf")]
	public partial class PGAContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCourseDetails(CourseDetails instance);
    partial void UpdateCourseDetails(CourseDetails instance);
    partial void DeleteCourseDetails(CourseDetails instance);
    partial void InsertDrawingStack(DrawingStack instance);
    partial void UpdateDrawingStack(DrawingStack instance);
    partial void DeleteDrawingStack(DrawingStack instance);
    partial void InsertExcludedFeatures(ExcludedFeatures instance);
    partial void UpdateExcludedFeatures(ExcludedFeatures instance);
    partial void DeleteExcludedFeatures(ExcludedFeatures instance);
    partial void InsertExportToCADStack(ExportToCADStack instance);
    partial void UpdateExportToCADStack(ExportToCADStack instance);
    partial void DeleteExportToCADStack(ExportToCADStack instance);
    partial void InsertFeatureIndex(FeatureIndex instance);
    partial void UpdateFeatureIndex(FeatureIndex instance);
    partial void DeleteFeatureIndex(FeatureIndex instance);
    partial void InsertGeneralCADStack(GeneralCADStack instance);
    partial void UpdateGeneralCADStack(GeneralCADStack instance);
    partial void DeleteGeneralCADStack(GeneralCADStack instance);
    partial void InsertGlobalSettings(GlobalSettings instance);
    partial void UpdateGlobalSettings(GlobalSettings instance);
    partial void DeleteGlobalSettings(GlobalSettings instance);
    partial void InsertLogs(Logs instance);
    partial void UpdateLogs(Logs instance);
    partial void DeleteLogs(Logs instance);
    partial void InsertNotifications(Notifications instance);
    partial void UpdateNotifications(Notifications instance);
    partial void DeleteNotifications(Notifications instance);
    partial void InsertPointCloud(PointCloud instance);
    partial void UpdatePointCloud(PointCloud instance);
    partial void DeletePointCloud(PointCloud instance);
    partial void InsertPolyline(Polyline instance);
    partial void UpdatePolyline(Polyline instance);
    partial void DeletePolyline(Polyline instance);
    partial void InsertPolylineDWGS(PolylineDWGS instance);
    partial void UpdatePolylineDWGS(PolylineDWGS instance);
    partial void DeletePolylineDWGS(PolylineDWGS instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertSmoothing(Smoothing instance);
    partial void UpdateSmoothing(Smoothing instance);
    partial void DeleteSmoothing(Smoothing instance);
    partial void InsertSourceDrawingInfo(SourceDrawingInfo instance);
    partial void UpdateSourceDrawingInfo(SourceDrawingInfo instance);
    partial void DeleteSourceDrawingInfo(SourceDrawingInfo instance);
    partial void InsertTaskManager(TaskManager instance);
    partial void UpdateTaskManager(TaskManager instance);
    partial void DeleteTaskManager(TaskManager instance);
    partial void InsertTasks(Tasks instance);
    partial void UpdateTasks(Tasks instance);
    partial void DeleteTasks(Tasks instance);
    partial void InsertTimer(Timer instance);
    partial void UpdateTimer(Timer instance);
    partial void DeleteTimer(Timer instance);
    partial void InsertUpdates(Updates instance);
    partial void UpdateUpdates(Updates instance);
    partial void DeleteUpdates(Updates instance);
    #endregion
		
		public PGAContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PGAContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PGAContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PGAContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CourseDetails> CourseDetails
		{
			get
			{
				return this.GetTable<CourseDetails>();
			}
		}
		
		public System.Data.Linq.Table<DrawingStack> DrawingStack
		{
			get
			{
				return this.GetTable<DrawingStack>();
			}
		}
		
		public System.Data.Linq.Table<ExcludedFeatures> ExcludedFeatures
		{
			get
			{
				return this.GetTable<ExcludedFeatures>();
			}
		}
		
		public System.Data.Linq.Table<ExportToCADStack> ExportToCADStack
		{
			get
			{
				return this.GetTable<ExportToCADStack>();
			}
		}
		
		public System.Data.Linq.Table<FeatureIndex> FeatureIndex
		{
			get
			{
				return this.GetTable<FeatureIndex>();
			}
		}
		
		public System.Data.Linq.Table<GeneralCADStack> GeneralCADStack
		{
			get
			{
				return this.GetTable<GeneralCADStack>();
			}
		}
		
		public System.Data.Linq.Table<GlobalSettings> GlobalSettings
		{
			get
			{
				return this.GetTable<GlobalSettings>();
			}
		}
		
		public System.Data.Linq.Table<Logs> Logs
		{
			get
			{
				return this.GetTable<Logs>();
			}
		}
		
		public System.Data.Linq.Table<Notifications> Notifications
		{
			get
			{
				return this.GetTable<Notifications>();
			}
		}
		
		public System.Data.Linq.Table<PointCloud> PointCloud
		{
			get
			{
				return this.GetTable<PointCloud>();
			}
		}
		
		public System.Data.Linq.Table<Polyline> Polyline
		{
			get
			{
				return this.GetTable<Polyline>();
			}
		}
		
		public System.Data.Linq.Table<PolylineDWGS> PolylineDWGS
		{
			get
			{
				return this.GetTable<PolylineDWGS>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<Smoothing> Smoothing
		{
			get
			{
				return this.GetTable<Smoothing>();
			}
		}
		
		public System.Data.Linq.Table<SourceDrawingInfo> SourceDrawingInfo
		{
			get
			{
				return this.GetTable<SourceDrawingInfo>();
			}
		}
		
		public System.Data.Linq.Table<TaskManager> TaskManager
		{
			get
			{
				return this.GetTable<TaskManager>();
			}
		}
		
		public System.Data.Linq.Table<Tasks> Tasks
		{
			get
			{
				return this.GetTable<Tasks>();
			}
		}
		
		public System.Data.Linq.Table<Timer> Timer
		{
			get
			{
				return this.GetTable<Timer>();
			}
		}
		
		public System.Data.Linq.Table<Updates> Updates
		{
			get
			{
				return this.GetTable<Updates>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class CourseDetails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _City;
		
		private string _State;
		
		private string _CourseNum;
		
		private string _TOURCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCourseNumChanging(string value);
    partial void OnCourseNumChanged();
    partial void OnTOURCodeChanging(string value);
    partial void OnTOURCodeChanged();
    #endregion
		
		public CourseDetails()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseNum", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CourseNum
		{
			get
			{
				return this._CourseNum;
			}
			set
			{
				if ((this._CourseNum != value))
				{
					this.OnCourseNumChanging(value);
					this.SendPropertyChanging();
					this._CourseNum = value;
					this.SendPropertyChanged("CourseNum");
					this.OnCourseNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOURCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TOURCode
		{
			get
			{
				return this._TOURCode;
			}
			set
			{
				if ((this._TOURCode != value))
				{
					this.OnTOURCodeChanging(value);
					this.SendPropertyChanging();
					this._TOURCode = value;
					this.SendPropertyChanged("TOURCode");
					this.OnTOURCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DrawingStack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PolylineDwgName;
		
		private string _PointCloudDwgName;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private string _Function;
		
		private System.Nullable<bool> _IsInvoked;
		
		private System.Nullable<bool> _IsRunning;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<bool> _HasError;
		
		private System.Nullable<System.DateTime> _TimeStarted;
		
		private System.Nullable<System.DateTime> _TimeCompleted;
		
		private System.Nullable<long> _SourcePolylineDwgID;
		
		private System.Nullable<long> _Hole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPolylineDwgNameChanging(string value);
    partial void OnPolylineDwgNameChanged();
    partial void OnPointCloudDwgNameChanging(string value);
    partial void OnPointCloudDwgNameChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnIsInvokedChanging(System.Nullable<bool> value);
    partial void OnIsInvokedChanged();
    partial void OnIsRunningChanging(System.Nullable<bool> value);
    partial void OnIsRunningChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnHasErrorChanging(System.Nullable<bool> value);
    partial void OnHasErrorChanged();
    partial void OnTimeStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartedChanged();
    partial void OnTimeCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeCompletedChanged();
    partial void OnSourcePolylineDwgIDChanging(System.Nullable<long> value);
    partial void OnSourcePolylineDwgIDChanged();
    partial void OnHoleChanging(System.Nullable<long> value);
    partial void OnHoleChanged();
    #endregion
		
		public DrawingStack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolylineDwgName", DbType="NVarChar(500)")]
		public string PolylineDwgName
		{
			get
			{
				return this._PolylineDwgName;
			}
			set
			{
				if ((this._PolylineDwgName != value))
				{
					this.OnPolylineDwgNameChanging(value);
					this.SendPropertyChanging();
					this._PolylineDwgName = value;
					this.SendPropertyChanged("PolylineDwgName");
					this.OnPolylineDwgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointCloudDwgName", DbType="NVarChar(500)")]
		public string PointCloudDwgName
		{
			get
			{
				return this._PointCloudDwgName;
			}
			set
			{
				if ((this._PointCloudDwgName != value))
				{
					this.OnPointCloudDwgNameChanging(value);
					this.SendPropertyChanging();
					this._PointCloudDwgName = value;
					this.SendPropertyChanged("PointCloudDwgName");
					this.OnPointCloudDwgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function", DbType="NVarChar(100)")]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoked", DbType="Bit")]
		public System.Nullable<bool> IsInvoked
		{
			get
			{
				return this._IsInvoked;
			}
			set
			{
				if ((this._IsInvoked != value))
				{
					this.OnIsInvokedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoked = value;
					this.SendPropertyChanged("IsInvoked");
					this.OnIsInvokedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRunning", DbType="Bit")]
		public System.Nullable<bool> IsRunning
		{
			get
			{
				return this._IsRunning;
			}
			set
			{
				if ((this._IsRunning != value))
				{
					this.OnIsRunningChanging(value);
					this.SendPropertyChanging();
					this._IsRunning = value;
					this.SendPropertyChanged("IsRunning");
					this.OnIsRunningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit")]
		public System.Nullable<bool> HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStarted
		{
			get
			{
				return this._TimeStarted;
			}
			set
			{
				if ((this._TimeStarted != value))
				{
					this.OnTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._TimeStarted = value;
					this.SendPropertyChanged("TimeStarted");
					this.OnTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeCompleted
		{
			get
			{
				return this._TimeCompleted;
			}
			set
			{
				if ((this._TimeCompleted != value))
				{
					this.OnTimeCompletedChanging(value);
					this.SendPropertyChanging();
					this._TimeCompleted = value;
					this.SendPropertyChanged("TimeCompleted");
					this.OnTimeCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePolylineDwgID", DbType="BigInt")]
		public System.Nullable<long> SourcePolylineDwgID
		{
			get
			{
				return this._SourcePolylineDwgID;
			}
			set
			{
				if ((this._SourcePolylineDwgID != value))
				{
					this.OnSourcePolylineDwgIDChanging(value);
					this.SendPropertyChanging();
					this._SourcePolylineDwgID = value;
					this.SendPropertyChanged("SourcePolylineDwgID");
					this.OnSourcePolylineDwgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hole", DbType="BigInt")]
		public System.Nullable<long> Hole
		{
			get
			{
				return this._Hole;
			}
			set
			{
				if ((this._Hole != value))
				{
					this.OnHoleChanging(value);
					this.SendPropertyChanging();
					this._Hole = value;
					this.SendPropertyChanged("Hole");
					this.OnHoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ExcludedFeatures : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Handle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHandleChanging(string value);
    partial void OnHandleChanged();
    #endregion
		
		public ExcludedFeatures()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handle", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Handle
		{
			get
			{
				return this._Handle;
			}
			set
			{
				if ((this._Handle != value))
				{
					this.OnHandleChanging(value);
					this.SendPropertyChanging();
					this._Handle = value;
					this.SendPropertyChanged("Handle");
					this.OnHandleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ExportToCADStack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DwgName;
		
		private string _CompletePath;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private string _Function;
		
		private System.Nullable<bool> _IsInvoked;
		
		private System.Nullable<bool> _IsRunning;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<bool> _HasError;
		
		private System.Nullable<long> _Hole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDwgNameChanging(string value);
    partial void OnDwgNameChanged();
    partial void OnCompletePathChanging(string value);
    partial void OnCompletePathChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnIsInvokedChanging(System.Nullable<bool> value);
    partial void OnIsInvokedChanged();
    partial void OnIsRunningChanging(System.Nullable<bool> value);
    partial void OnIsRunningChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnHasErrorChanging(System.Nullable<bool> value);
    partial void OnHasErrorChanged();
    partial void OnHoleChanging(System.Nullable<long> value);
    partial void OnHoleChanged();
    #endregion
		
		public ExportToCADStack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DwgName", DbType="NVarChar(500)")]
		public string DwgName
		{
			get
			{
				return this._DwgName;
			}
			set
			{
				if ((this._DwgName != value))
				{
					this.OnDwgNameChanging(value);
					this.SendPropertyChanging();
					this._DwgName = value;
					this.SendPropertyChanged("DwgName");
					this.OnDwgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletePath", DbType="NVarChar(500)")]
		public string CompletePath
		{
			get
			{
				return this._CompletePath;
			}
			set
			{
				if ((this._CompletePath != value))
				{
					this.OnCompletePathChanging(value);
					this.SendPropertyChanging();
					this._CompletePath = value;
					this.SendPropertyChanged("CompletePath");
					this.OnCompletePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function", DbType="NVarChar(100)")]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoked", DbType="Bit")]
		public System.Nullable<bool> IsInvoked
		{
			get
			{
				return this._IsInvoked;
			}
			set
			{
				if ((this._IsInvoked != value))
				{
					this.OnIsInvokedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoked = value;
					this.SendPropertyChanged("IsInvoked");
					this.OnIsInvokedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRunning", DbType="Bit")]
		public System.Nullable<bool> IsRunning
		{
			get
			{
				return this._IsRunning;
			}
			set
			{
				if ((this._IsRunning != value))
				{
					this.OnIsRunningChanging(value);
					this.SendPropertyChanging();
					this._IsRunning = value;
					this.SendPropertyChanged("IsRunning");
					this.OnIsRunningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit")]
		public System.Nullable<bool> HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hole", DbType="BigInt")]
		public System.Nullable<long> Hole
		{
			get
			{
				return this._Hole;
			}
			set
			{
				if ((this._Hole != value))
				{
					this.OnHoleChanging(value);
					this.SendPropertyChanging();
					this._Hole = value;
					this.SendPropertyChanged("Hole");
					this.OnHoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class FeatureIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FeatureName;
		
		private string _Code;
		
		private int _Rank;
		
		private string _Classification;
		
		private string _Description;
		
		private System.Nullable<bool> _Is2D;
		
		private System.Nullable<bool> _ModTo3D;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFeatureNameChanging(string value);
    partial void OnFeatureNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnClassificationChanging(string value);
    partial void OnClassificationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIs2DChanging(System.Nullable<bool> value);
    partial void OnIs2DChanged();
    partial void OnModTo3DChanging(System.Nullable<bool> value);
    partial void OnModTo3DChanged();
    #endregion
		
		public FeatureIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string FeatureName
		{
			get
			{
				return this._FeatureName;
			}
			set
			{
				if ((this._FeatureName != value))
				{
					this.OnFeatureNameChanging(value);
					this.SendPropertyChanging();
					this._FeatureName = value;
					this.SendPropertyChanged("FeatureName");
					this.OnFeatureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification", DbType="NChar(100)")]
		public string Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is2D", DbType="Bit")]
		public System.Nullable<bool> Is2D
		{
			get
			{
				return this._Is2D;
			}
			set
			{
				if ((this._Is2D != value))
				{
					this.OnIs2DChanging(value);
					this.SendPropertyChanging();
					this._Is2D = value;
					this.SendPropertyChanged("Is2D");
					this.OnIs2DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModTo3D", DbType="Bit")]
		public System.Nullable<bool> ModTo3D
		{
			get
			{
				return this._ModTo3D;
			}
			set
			{
				if ((this._ModTo3D != value))
				{
					this.OnModTo3DChanging(value);
					this.SendPropertyChanging();
					this._ModTo3D = value;
					this.SendPropertyChanged("ModTo3D");
					this.OnModTo3DChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class GeneralCADStack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DwgName;
		
		private string _CompletePath;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private string _Function;
		
		private System.Nullable<bool> _IsInvoked;
		
		private System.Nullable<bool> _IsRunning;
		
		private System.Nullable<bool> _IsCompleted;
		
		private System.Nullable<bool> _HasError;
		
		private System.Nullable<long> _Hole;
		
		private System.Nullable<System.DateTime> _DateStarted;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDwgNameChanging(string value);
    partial void OnDwgNameChanged();
    partial void OnCompletePathChanging(string value);
    partial void OnCompletePathChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnFunctionChanging(string value);
    partial void OnFunctionChanged();
    partial void OnIsInvokedChanging(System.Nullable<bool> value);
    partial void OnIsInvokedChanged();
    partial void OnIsRunningChanging(System.Nullable<bool> value);
    partial void OnIsRunningChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnHasErrorChanging(System.Nullable<bool> value);
    partial void OnHasErrorChanged();
    partial void OnHoleChanging(System.Nullable<long> value);
    partial void OnHoleChanged();
    partial void OnDateStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    #endregion
		
		public GeneralCADStack()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DwgName", DbType="NVarChar(500)")]
		public string DwgName
		{
			get
			{
				return this._DwgName;
			}
			set
			{
				if ((this._DwgName != value))
				{
					this.OnDwgNameChanging(value);
					this.SendPropertyChanging();
					this._DwgName = value;
					this.SendPropertyChanged("DwgName");
					this.OnDwgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletePath", DbType="NVarChar(500)")]
		public string CompletePath
		{
			get
			{
				return this._CompletePath;
			}
			set
			{
				if ((this._CompletePath != value))
				{
					this.OnCompletePathChanging(value);
					this.SendPropertyChanging();
					this._CompletePath = value;
					this.SendPropertyChanged("CompletePath");
					this.OnCompletePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Function", DbType="NVarChar(100)")]
		public string Function
		{
			get
			{
				return this._Function;
			}
			set
			{
				if ((this._Function != value))
				{
					this.OnFunctionChanging(value);
					this.SendPropertyChanging();
					this._Function = value;
					this.SendPropertyChanged("Function");
					this.OnFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoked", DbType="Bit")]
		public System.Nullable<bool> IsInvoked
		{
			get
			{
				return this._IsInvoked;
			}
			set
			{
				if ((this._IsInvoked != value))
				{
					this.OnIsInvokedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoked = value;
					this.SendPropertyChanged("IsInvoked");
					this.OnIsInvokedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRunning", DbType="Bit")]
		public System.Nullable<bool> IsRunning
		{
			get
			{
				return this._IsRunning;
			}
			set
			{
				if ((this._IsRunning != value))
				{
					this.OnIsRunningChanging(value);
					this.SendPropertyChanging();
					this._IsRunning = value;
					this.SendPropertyChanged("IsRunning");
					this.OnIsRunningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit")]
		public System.Nullable<bool> HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hole", DbType="BigInt")]
		public System.Nullable<long> Hole
		{
			get
			{
				return this._Hole;
			}
			set
			{
				if ((this._Hole != value))
				{
					this.OnHoleChanging(value);
					this.SendPropertyChanging();
					this._Hole = value;
					this.SendPropertyChanged("Hole");
					this.OnHoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStarted
		{
			get
			{
				return this._DateStarted;
			}
			set
			{
				if ((this._DateStarted != value))
				{
					this.OnDateStartedChanging(value);
					this.SendPropertyChanging();
					this._DateStarted = value;
					this.SendPropertyChanged("DateStarted");
					this.OnDateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class GlobalSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PointsPath;
		
		private string _PolylinePath;
		
		private string _SourceDWG;
		
		private string _ServerName;
		
		private string _ServerPath;
		
		private string _EmailAddress;
		
		private string _EmailServer;
		
		private string _EmailPort;
		
		private string _EmailUserName;
		
		private string _EmailPassword;
		
		private System.Nullable<bool> _IsEmailSecured;
		
		private System.Nullable<bool> _IsAttachment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPointsPathChanging(string value);
    partial void OnPointsPathChanged();
    partial void OnPolylinePathChanging(string value);
    partial void OnPolylinePathChanged();
    partial void OnSourceDWGChanging(string value);
    partial void OnSourceDWGChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnServerPathChanging(string value);
    partial void OnServerPathChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnEmailServerChanging(string value);
    partial void OnEmailServerChanged();
    partial void OnEmailPortChanging(string value);
    partial void OnEmailPortChanged();
    partial void OnEmailUserNameChanging(string value);
    partial void OnEmailUserNameChanged();
    partial void OnEmailPasswordChanging(string value);
    partial void OnEmailPasswordChanged();
    partial void OnIsEmailSecuredChanging(System.Nullable<bool> value);
    partial void OnIsEmailSecuredChanged();
    partial void OnIsAttachmentChanging(System.Nullable<bool> value);
    partial void OnIsAttachmentChanged();
    #endregion
		
		public GlobalSettings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPath", DbType="NVarChar(200)")]
		public string PointsPath
		{
			get
			{
				return this._PointsPath;
			}
			set
			{
				if ((this._PointsPath != value))
				{
					this.OnPointsPathChanging(value);
					this.SendPropertyChanging();
					this._PointsPath = value;
					this.SendPropertyChanged("PointsPath");
					this.OnPointsPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolylinePath", DbType="NVarChar(200)")]
		public string PolylinePath
		{
			get
			{
				return this._PolylinePath;
			}
			set
			{
				if ((this._PolylinePath != value))
				{
					this.OnPolylinePathChanging(value);
					this.SendPropertyChanging();
					this._PolylinePath = value;
					this.SendPropertyChanged("PolylinePath");
					this.OnPolylinePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDWG", DbType="NVarChar(200)")]
		public string SourceDWG
		{
			get
			{
				return this._SourceDWG;
			}
			set
			{
				if ((this._SourceDWG != value))
				{
					this.OnSourceDWGChanging(value);
					this.SendPropertyChanging();
					this._SourceDWG = value;
					this.SendPropertyChanged("SourceDWG");
					this.OnSourceDWGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(100)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPath", DbType="NVarChar(100)")]
		public string ServerPath
		{
			get
			{
				return this._ServerPath;
			}
			set
			{
				if ((this._ServerPath != value))
				{
					this.OnServerPathChanging(value);
					this.SendPropertyChanging();
					this._ServerPath = value;
					this.SendPropertyChanged("ServerPath");
					this.OnServerPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailServer", DbType="NVarChar(100)")]
		public string EmailServer
		{
			get
			{
				return this._EmailServer;
			}
			set
			{
				if ((this._EmailServer != value))
				{
					this.OnEmailServerChanging(value);
					this.SendPropertyChanging();
					this._EmailServer = value;
					this.SendPropertyChanged("EmailServer");
					this.OnEmailServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPort", DbType="NVarChar(100)")]
		public string EmailPort
		{
			get
			{
				return this._EmailPort;
			}
			set
			{
				if ((this._EmailPort != value))
				{
					this.OnEmailPortChanging(value);
					this.SendPropertyChanging();
					this._EmailPort = value;
					this.SendPropertyChanged("EmailPort");
					this.OnEmailPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailUserName", DbType="NVarChar(100)")]
		public string EmailUserName
		{
			get
			{
				return this._EmailUserName;
			}
			set
			{
				if ((this._EmailUserName != value))
				{
					this.OnEmailUserNameChanging(value);
					this.SendPropertyChanging();
					this._EmailUserName = value;
					this.SendPropertyChanged("EmailUserName");
					this.OnEmailUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPassword", DbType="NVarChar(100)")]
		public string EmailPassword
		{
			get
			{
				return this._EmailPassword;
			}
			set
			{
				if ((this._EmailPassword != value))
				{
					this.OnEmailPasswordChanging(value);
					this.SendPropertyChanging();
					this._EmailPassword = value;
					this.SendPropertyChanged("EmailPassword");
					this.OnEmailPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailSecured", DbType="Bit")]
		public System.Nullable<bool> IsEmailSecured
		{
			get
			{
				return this._IsEmailSecured;
			}
			set
			{
				if ((this._IsEmailSecured != value))
				{
					this.OnIsEmailSecuredChanging(value);
					this.SendPropertyChanging();
					this._IsEmailSecured = value;
					this.SendPropertyChanged("IsEmailSecured");
					this.OnIsEmailSecuredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAttachment", DbType="Bit")]
		public System.Nullable<bool> IsAttachment
		{
			get
			{
				return this._IsAttachment;
			}
			set
			{
				if ((this._IsAttachment != value))
				{
					this.OnIsAttachmentChanging(value);
					this.SendPropertyChanging();
					this._IsAttachment = value;
					this.SendPropertyChanged("IsAttachment");
					this.OnIsAttachmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Logs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DateStamp;
		
		private string _Issue;
		
		private string _DrawingID;
		
		private string _Severity;
		
		private string _Source;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(string value);
    partial void OnDateStampChanged();
    partial void OnIssueChanging(string value);
    partial void OnIssueChanged();
    partial void OnDrawingIDChanging(string value);
    partial void OnDrawingIDChanged();
    partial void OnSeverityChanging(string value);
    partial void OnSeverityChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    #endregion
		
		public Logs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issue", DbType="NChar(600) NOT NULL", CanBeNull=false)]
		public string Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this.OnIssueChanging(value);
					this.SendPropertyChanging();
					this._Issue = value;
					this.SendPropertyChanged("Issue");
					this.OnIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingID", DbType="NChar(50)")]
		public string DrawingID
		{
			get
			{
				return this._DrawingID;
			}
			set
			{
				if ((this._DrawingID != value))
				{
					this.OnDrawingIDChanging(value);
					this.SendPropertyChanging();
					this._DrawingID = value;
					this.SendPropertyChanged("DrawingID");
					this.OnDrawingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Severity", DbType="NChar(50)")]
		public string Severity
		{
			get
			{
				return this._Severity;
			}
			set
			{
				if ((this._Severity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._Severity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Notifications : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<int> _DrawingId;
		
		private string _DrawingName;
		
		private string _Command;
		
		private string _CommandFunction;
		
		private string _State;
		
		private bool _HasError;
		
		private string _ErrorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnDrawingIdChanging(System.Nullable<int> value);
    partial void OnDrawingIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnCommandFunctionChanging(string value);
    partial void OnCommandFunctionChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnHasErrorChanging(bool value);
    partial void OnHasErrorChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public Notifications()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingId", DbType="Int")]
		public System.Nullable<int> DrawingId
		{
			get
			{
				return this._DrawingId;
			}
			set
			{
				if ((this._DrawingId != value))
				{
					this.OnDrawingIdChanging(value);
					this.SendPropertyChanging();
					this._DrawingId = value;
					this.SendPropertyChanged("DrawingId");
					this.OnDrawingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(500)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(500)")]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandFunction", DbType="NVarChar(500)")]
		public string CommandFunction
		{
			get
			{
				return this._CommandFunction;
			}
			set
			{
				if ((this._CommandFunction != value))
				{
					this.OnCommandFunctionChanging(value);
					this.SendPropertyChanging();
					this._CommandFunction = value;
					this.SendPropertyChanged("CommandFunction");
					this.OnCommandFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit NOT NULL")]
		public bool HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(500)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PointCloud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingGUI;
		
		private string _SourcePath;
		
		private string _DestinationPath;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _DateLoaded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingGUIChanging(string value);
    partial void OnDrawingGUIChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnDestinationPathChanging(string value);
    partial void OnDestinationPathChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnDateLoadedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoadedChanged();
    #endregion
		
		public PointCloud()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingGUI", DbType="NVarChar(50)")]
		public string DrawingGUI
		{
			get
			{
				return this._DrawingGUI;
			}
			set
			{
				if ((this._DrawingGUI != value))
				{
					this.OnDrawingGUIChanging(value);
					this.SendPropertyChanging();
					this._DrawingGUI = value;
					this.SendPropertyChanged("DrawingGUI");
					this.OnDrawingGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="NVarChar(200)")]
		public string SourcePath
		{
			get
			{
				return this._SourcePath;
			}
			set
			{
				if ((this._SourcePath != value))
				{
					this.OnSourcePathChanging(value);
					this.SendPropertyChanging();
					this._SourcePath = value;
					this.SendPropertyChanged("SourcePath");
					this.OnSourcePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPath", DbType="NVarChar(200)")]
		public string DestinationPath
		{
			get
			{
				return this._DestinationPath;
			}
			set
			{
				if ((this._DestinationPath != value))
				{
					this.OnDestinationPathChanging(value);
					this.SendPropertyChanging();
					this._DestinationPath = value;
					this.SendPropertyChanged("DestinationPath");
					this.OnDestinationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLoaded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLoaded
		{
			get
			{
				return this._DateLoaded;
			}
			set
			{
				if ((this._DateLoaded != value))
				{
					this.OnDateLoadedChanging(value);
					this.SendPropertyChanging();
					this._DateLoaded = value;
					this.SendPropertyChanged("DateLoaded");
					this.OnDateLoadedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Polyline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _DrawingName;
		
		private string _DrawingID;
		
		private string _Handle;
		
		private string _Depends;
		
		private string _Level;
		
		private string _Nodes;
		
		private string _Layer;
		
		private string _Area;
		
		private string _Length;
		
		private System.Data.Linq.Binary _Geometry;
		
		private System.Data.Linq.Binary _LiDARPoints;
		
		private string _Hole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingIDChanging(string value);
    partial void OnDrawingIDChanged();
    partial void OnHandleChanging(string value);
    partial void OnHandleChanged();
    partial void OnDependsChanging(string value);
    partial void OnDependsChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnNodesChanging(string value);
    partial void OnNodesChanged();
    partial void OnLayerChanging(string value);
    partial void OnLayerChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnLengthChanging(string value);
    partial void OnLengthChanged();
    partial void OnGeometryChanging(System.Data.Linq.Binary value);
    partial void OnGeometryChanged();
    partial void OnLiDARPointsChanging(System.Data.Linq.Binary value);
    partial void OnLiDARPointsChanged();
    partial void OnHoleChanging(string value);
    partial void OnHoleChanged();
    #endregion
		
		public Polyline()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingID", DbType="NChar(50)")]
		public string DrawingID
		{
			get
			{
				return this._DrawingID;
			}
			set
			{
				if ((this._DrawingID != value))
				{
					this.OnDrawingIDChanging(value);
					this.SendPropertyChanging();
					this._DrawingID = value;
					this.SendPropertyChanged("DrawingID");
					this.OnDrawingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handle", DbType="NChar(50)")]
		public string Handle
		{
			get
			{
				return this._Handle;
			}
			set
			{
				if ((this._Handle != value))
				{
					this.OnHandleChanging(value);
					this.SendPropertyChanging();
					this._Handle = value;
					this.SendPropertyChanged("Handle");
					this.OnHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depends", DbType="NChar(50)")]
		public string Depends
		{
			get
			{
				return this._Depends;
			}
			set
			{
				if ((this._Depends != value))
				{
					this.OnDependsChanging(value);
					this.SendPropertyChanging();
					this._Depends = value;
					this.SendPropertyChanged("Depends");
					this.OnDependsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Level", DbType="NChar(50)")]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nodes", DbType="NChar(50)")]
		public string Nodes
		{
			get
			{
				return this._Nodes;
			}
			set
			{
				if ((this._Nodes != value))
				{
					this.OnNodesChanging(value);
					this.SendPropertyChanging();
					this._Nodes = value;
					this.SendPropertyChanged("Nodes");
					this.OnNodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="NChar(50)")]
		public string Layer
		{
			get
			{
				return this._Layer;
			}
			set
			{
				if ((this._Layer != value))
				{
					this.OnLayerChanging(value);
					this.SendPropertyChanging();
					this._Layer = value;
					this.SendPropertyChanged("Layer");
					this.OnLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NChar(50)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="NChar(50)")]
		public string Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geometry", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Geometry
		{
			get
			{
				return this._Geometry;
			}
			set
			{
				if ((this._Geometry != value))
				{
					this.OnGeometryChanging(value);
					this.SendPropertyChanging();
					this._Geometry = value;
					this.SendPropertyChanged("Geometry");
					this.OnGeometryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiDARPoints", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LiDARPoints
		{
			get
			{
				return this._LiDARPoints;
			}
			set
			{
				if ((this._LiDARPoints != value))
				{
					this.OnLiDARPointsChanging(value);
					this.SendPropertyChanging();
					this._LiDARPoints = value;
					this.SendPropertyChanged("LiDARPoints");
					this.OnLiDARPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hole", DbType="NChar(50)")]
		public string Hole
		{
			get
			{
				return this._Hole;
			}
			set
			{
				if ((this._Hole != value))
				{
					this.OnHoleChanging(value);
					this.SendPropertyChanging();
					this._Hole = value;
					this.SendPropertyChanged("Hole");
					this.OnHoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PolylineDWGS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingGUI;
		
		private string _SourcePath;
		
		private string _DestinationPath;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _DateLoaded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingGUIChanging(string value);
    partial void OnDrawingGUIChanged();
    partial void OnSourcePathChanging(string value);
    partial void OnSourcePathChanged();
    partial void OnDestinationPathChanging(string value);
    partial void OnDestinationPathChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnDateLoadedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoadedChanged();
    #endregion
		
		public PolylineDWGS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingGUI", DbType="NVarChar(50)")]
		public string DrawingGUI
		{
			get
			{
				return this._DrawingGUI;
			}
			set
			{
				if ((this._DrawingGUI != value))
				{
					this.OnDrawingGUIChanging(value);
					this.SendPropertyChanging();
					this._DrawingGUI = value;
					this.SendPropertyChanged("DrawingGUI");
					this.OnDrawingGUIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePath", DbType="NVarChar(200)")]
		public string SourcePath
		{
			get
			{
				return this._SourcePath;
			}
			set
			{
				if ((this._SourcePath != value))
				{
					this.OnSourcePathChanging(value);
					this.SendPropertyChanging();
					this._SourcePath = value;
					this.SendPropertyChanged("SourcePath");
					this.OnSourcePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPath", DbType="NVarChar(200)")]
		public string DestinationPath
		{
			get
			{
				return this._DestinationPath;
			}
			set
			{
				if ((this._DestinationPath != value))
				{
					this.OnDestinationPathChanging(value);
					this.SendPropertyChanging();
					this._DestinationPath = value;
					this.SendPropertyChanged("DestinationPath");
					this.OnDestinationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLoaded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLoaded
		{
			get
			{
				return this._DateLoaded;
			}
			set
			{
				if ((this._DateLoaded != value))
				{
					this.OnDateLoadedChanging(value);
					this.SendPropertyChanging();
					this._DateLoaded = value;
					this.SendPropertyChanged("DateLoaded");
					this.OnDateLoadedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _GlobalPointFilePath;
		
		private string _GlobalPolylineFilePath;
		
		private string _TemplateDWG;
		
		private string _SeverPath;
		
		private string _CourseName;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private string _DestinationFolder;
		
		private System.Nullable<bool> _CreateDXF;
		
		private System.Nullable<bool> _CreateHolesXX;
		
		private System.Nullable<bool> _SimplifyPlines;
		
		private System.Nullable<bool> _CreateBreaklines;
		
		private System.Nullable<bool> _SkipSDxf;
		
		private System.Nullable<bool> _DuplicateSurfaces;
		
		private System.Nullable<bool> _GenReports;
		
		private string _CourseCode;
		
		private string _TourCode;
		
		private string _DestDXFFolder;
		
		private string _ProjectName;
		
		private string _ProjectCity;
		
		private string _ProjectState;
		
		private System.Nullable<System.DateTime> _ProjectDate;
		
		private string _ProjectCreator;
		
		private string _ProjectManager;
		
		private string _ProjectSurveyor;
		
		private System.Nullable<bool> _Probing;
		
		private System.Nullable<bool> _SportVision;
		
		private System.Nullable<bool> _Smoothing;
		
		private System.Nullable<bool> _PDFReport;
		
		private System.Nullable<bool> _AddFLWaterSurf;
		
		private System.Nullable<bool> _GenErrReport;
		
		private System.Nullable<bool> _Out3DPolys;
		
		private System.Nullable<bool> _StrictFileNames;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<bool> _IsPaused;
		
		private System.Nullable<double> _SimplifyValue;
		
		private System.Nullable<double> _CurveFitValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlobalPointFilePathChanging(string value);
    partial void OnGlobalPointFilePathChanged();
    partial void OnGlobalPolylineFilePathChanging(string value);
    partial void OnGlobalPolylineFilePathChanged();
    partial void OnTemplateDWGChanging(string value);
    partial void OnTemplateDWGChanged();
    partial void OnSeverPathChanging(string value);
    partial void OnSeverPathChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnDestinationFolderChanging(string value);
    partial void OnDestinationFolderChanged();
    partial void OnCreateDXFChanging(System.Nullable<bool> value);
    partial void OnCreateDXFChanged();
    partial void OnCreateHolesXXChanging(System.Nullable<bool> value);
    partial void OnCreateHolesXXChanged();
    partial void OnSimplifyPlinesChanging(System.Nullable<bool> value);
    partial void OnSimplifyPlinesChanged();
    partial void OnCreateBreaklinesChanging(System.Nullable<bool> value);
    partial void OnCreateBreaklinesChanged();
    partial void OnSkipSDxfChanging(System.Nullable<bool> value);
    partial void OnSkipSDxfChanged();
    partial void OnDuplicateSurfacesChanging(System.Nullable<bool> value);
    partial void OnDuplicateSurfacesChanged();
    partial void OnGenReportsChanging(System.Nullable<bool> value);
    partial void OnGenReportsChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnTourCodeChanging(string value);
    partial void OnTourCodeChanged();
    partial void OnDestDXFFolderChanging(string value);
    partial void OnDestDXFFolderChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnProjectCityChanging(string value);
    partial void OnProjectCityChanged();
    partial void OnProjectStateChanging(string value);
    partial void OnProjectStateChanged();
    partial void OnProjectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectDateChanged();
    partial void OnProjectCreatorChanging(string value);
    partial void OnProjectCreatorChanged();
    partial void OnProjectManagerChanging(string value);
    partial void OnProjectManagerChanged();
    partial void OnProjectSurveyorChanging(string value);
    partial void OnProjectSurveyorChanged();
    partial void OnProbingChanging(System.Nullable<bool> value);
    partial void OnProbingChanged();
    partial void OnSportVisionChanging(System.Nullable<bool> value);
    partial void OnSportVisionChanged();
    partial void OnSmoothingChanging(System.Nullable<bool> value);
    partial void OnSmoothingChanged();
    partial void OnPDFReportChanging(System.Nullable<bool> value);
    partial void OnPDFReportChanged();
    partial void OnAddFLWaterSurfChanging(System.Nullable<bool> value);
    partial void OnAddFLWaterSurfChanged();
    partial void OnGenErrReportChanging(System.Nullable<bool> value);
    partial void OnGenErrReportChanged();
    partial void OnOut3DPolysChanging(System.Nullable<bool> value);
    partial void OnOut3DPolysChanged();
    partial void OnStrictFileNamesChanging(System.Nullable<bool> value);
    partial void OnStrictFileNamesChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsPausedChanging(System.Nullable<bool> value);
    partial void OnIsPausedChanged();
    partial void OnSimplifyValueChanging(System.Nullable<double> value);
    partial void OnSimplifyValueChanged();
    partial void OnCurveFitValueChanging(System.Nullable<double> value);
    partial void OnCurveFitValueChanged();
    #endregion
		
		public Settings()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalPointFilePath", DbType="NVarChar(200)")]
		public string GlobalPointFilePath
		{
			get
			{
				return this._GlobalPointFilePath;
			}
			set
			{
				if ((this._GlobalPointFilePath != value))
				{
					this.OnGlobalPointFilePathChanging(value);
					this.SendPropertyChanging();
					this._GlobalPointFilePath = value;
					this.SendPropertyChanged("GlobalPointFilePath");
					this.OnGlobalPointFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalPolylineFilePath", DbType="NVarChar(200)")]
		public string GlobalPolylineFilePath
		{
			get
			{
				return this._GlobalPolylineFilePath;
			}
			set
			{
				if ((this._GlobalPolylineFilePath != value))
				{
					this.OnGlobalPolylineFilePathChanging(value);
					this.SendPropertyChanging();
					this._GlobalPolylineFilePath = value;
					this.SendPropertyChanged("GlobalPolylineFilePath");
					this.OnGlobalPolylineFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateDWG", DbType="NVarChar(200)")]
		public string TemplateDWG
		{
			get
			{
				return this._TemplateDWG;
			}
			set
			{
				if ((this._TemplateDWG != value))
				{
					this.OnTemplateDWGChanging(value);
					this.SendPropertyChanging();
					this._TemplateDWG = value;
					this.SendPropertyChanged("TemplateDWG");
					this.OnTemplateDWGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeverPath", DbType="NVarChar(200)")]
		public string SeverPath
		{
			get
			{
				return this._SeverPath;
			}
			set
			{
				if ((this._SeverPath != value))
				{
					this.OnSeverPathChanging(value);
					this.SendPropertyChanging();
					this._SeverPath = value;
					this.SendPropertyChanged("SeverPath");
					this.OnSeverPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(50)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationFolder", DbType="NVarChar(200)")]
		public string DestinationFolder
		{
			get
			{
				return this._DestinationFolder;
			}
			set
			{
				if ((this._DestinationFolder != value))
				{
					this.OnDestinationFolderChanging(value);
					this.SendPropertyChanging();
					this._DestinationFolder = value;
					this.SendPropertyChanged("DestinationFolder");
					this.OnDestinationFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDXF", DbType="Bit")]
		public System.Nullable<bool> CreateDXF
		{
			get
			{
				return this._CreateDXF;
			}
			set
			{
				if ((this._CreateDXF != value))
				{
					this.OnCreateDXFChanging(value);
					this.SendPropertyChanging();
					this._CreateDXF = value;
					this.SendPropertyChanged("CreateDXF");
					this.OnCreateDXFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateHolesXX", DbType="Bit")]
		public System.Nullable<bool> CreateHolesXX
		{
			get
			{
				return this._CreateHolesXX;
			}
			set
			{
				if ((this._CreateHolesXX != value))
				{
					this.OnCreateHolesXXChanging(value);
					this.SendPropertyChanging();
					this._CreateHolesXX = value;
					this.SendPropertyChanged("CreateHolesXX");
					this.OnCreateHolesXXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplifyPlines", DbType="Bit")]
		public System.Nullable<bool> SimplifyPlines
		{
			get
			{
				return this._SimplifyPlines;
			}
			set
			{
				if ((this._SimplifyPlines != value))
				{
					this.OnSimplifyPlinesChanging(value);
					this.SendPropertyChanging();
					this._SimplifyPlines = value;
					this.SendPropertyChanged("SimplifyPlines");
					this.OnSimplifyPlinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBreaklines", DbType="Bit")]
		public System.Nullable<bool> CreateBreaklines
		{
			get
			{
				return this._CreateBreaklines;
			}
			set
			{
				if ((this._CreateBreaklines != value))
				{
					this.OnCreateBreaklinesChanging(value);
					this.SendPropertyChanging();
					this._CreateBreaklines = value;
					this.SendPropertyChanged("CreateBreaklines");
					this.OnCreateBreaklinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipSDxf", DbType="Bit")]
		public System.Nullable<bool> SkipSDxf
		{
			get
			{
				return this._SkipSDxf;
			}
			set
			{
				if ((this._SkipSDxf != value))
				{
					this.OnSkipSDxfChanging(value);
					this.SendPropertyChanging();
					this._SkipSDxf = value;
					this.SendPropertyChanged("SkipSDxf");
					this.OnSkipSDxfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuplicateSurfaces", DbType="Bit")]
		public System.Nullable<bool> DuplicateSurfaces
		{
			get
			{
				return this._DuplicateSurfaces;
			}
			set
			{
				if ((this._DuplicateSurfaces != value))
				{
					this.OnDuplicateSurfacesChanging(value);
					this.SendPropertyChanging();
					this._DuplicateSurfaces = value;
					this.SendPropertyChanged("DuplicateSurfaces");
					this.OnDuplicateSurfacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenReports", DbType="Bit")]
		public System.Nullable<bool> GenReports
		{
			get
			{
				return this._GenReports;
			}
			set
			{
				if ((this._GenReports != value))
				{
					this.OnGenReportsChanging(value);
					this.SendPropertyChanging();
					this._GenReports = value;
					this.SendPropertyChanged("GenReports");
					this.OnGenReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="NVarChar(10)")]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourCode", DbType="NVarChar(10)")]
		public string TourCode
		{
			get
			{
				return this._TourCode;
			}
			set
			{
				if ((this._TourCode != value))
				{
					this.OnTourCodeChanging(value);
					this.SendPropertyChanging();
					this._TourCode = value;
					this.SendPropertyChanged("TourCode");
					this.OnTourCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestDXFFolder", DbType="NVarChar(200)")]
		public string DestDXFFolder
		{
			get
			{
				return this._DestDXFFolder;
			}
			set
			{
				if ((this._DestDXFFolder != value))
				{
					this.OnDestDXFFolderChanging(value);
					this.SendPropertyChanging();
					this._DestDXFFolder = value;
					this.SendPropertyChanged("DestDXFFolder");
					this.OnDestDXFFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(250)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCity", DbType="NVarChar(250)")]
		public string ProjectCity
		{
			get
			{
				return this._ProjectCity;
			}
			set
			{
				if ((this._ProjectCity != value))
				{
					this.OnProjectCityChanging(value);
					this.SendPropertyChanging();
					this._ProjectCity = value;
					this.SendPropertyChanged("ProjectCity");
					this.OnProjectCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectState", DbType="NVarChar(250)")]
		public string ProjectState
		{
			get
			{
				return this._ProjectState;
			}
			set
			{
				if ((this._ProjectState != value))
				{
					this.OnProjectStateChanging(value);
					this.SendPropertyChanging();
					this._ProjectState = value;
					this.SendPropertyChanged("ProjectState");
					this.OnProjectStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProjectDate
		{
			get
			{
				return this._ProjectDate;
			}
			set
			{
				if ((this._ProjectDate != value))
				{
					this.OnProjectDateChanging(value);
					this.SendPropertyChanging();
					this._ProjectDate = value;
					this.SendPropertyChanged("ProjectDate");
					this.OnProjectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCreator", DbType="NVarChar(250)")]
		public string ProjectCreator
		{
			get
			{
				return this._ProjectCreator;
			}
			set
			{
				if ((this._ProjectCreator != value))
				{
					this.OnProjectCreatorChanging(value);
					this.SendPropertyChanging();
					this._ProjectCreator = value;
					this.SendPropertyChanged("ProjectCreator");
					this.OnProjectCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectManager", DbType="NVarChar(250)")]
		public string ProjectManager
		{
			get
			{
				return this._ProjectManager;
			}
			set
			{
				if ((this._ProjectManager != value))
				{
					this.OnProjectManagerChanging(value);
					this.SendPropertyChanging();
					this._ProjectManager = value;
					this.SendPropertyChanged("ProjectManager");
					this.OnProjectManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectSurveyor", DbType="NVarChar(250)")]
		public string ProjectSurveyor
		{
			get
			{
				return this._ProjectSurveyor;
			}
			set
			{
				if ((this._ProjectSurveyor != value))
				{
					this.OnProjectSurveyorChanging(value);
					this.SendPropertyChanging();
					this._ProjectSurveyor = value;
					this.SendPropertyChanged("ProjectSurveyor");
					this.OnProjectSurveyorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probing", DbType="Bit")]
		public System.Nullable<bool> Probing
		{
			get
			{
				return this._Probing;
			}
			set
			{
				if ((this._Probing != value))
				{
					this.OnProbingChanging(value);
					this.SendPropertyChanging();
					this._Probing = value;
					this.SendPropertyChanged("Probing");
					this.OnProbingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SportVision", DbType="Bit")]
		public System.Nullable<bool> SportVision
		{
			get
			{
				return this._SportVision;
			}
			set
			{
				if ((this._SportVision != value))
				{
					this.OnSportVisionChanging(value);
					this.SendPropertyChanging();
					this._SportVision = value;
					this.SendPropertyChanged("SportVision");
					this.OnSportVisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smoothing", DbType="Bit")]
		public System.Nullable<bool> Smoothing
		{
			get
			{
				return this._Smoothing;
			}
			set
			{
				if ((this._Smoothing != value))
				{
					this.OnSmoothingChanging(value);
					this.SendPropertyChanging();
					this._Smoothing = value;
					this.SendPropertyChanged("Smoothing");
					this.OnSmoothingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDFReport", DbType="Bit")]
		public System.Nullable<bool> PDFReport
		{
			get
			{
				return this._PDFReport;
			}
			set
			{
				if ((this._PDFReport != value))
				{
					this.OnPDFReportChanging(value);
					this.SendPropertyChanging();
					this._PDFReport = value;
					this.SendPropertyChanged("PDFReport");
					this.OnPDFReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddFLWaterSurf", DbType="Bit")]
		public System.Nullable<bool> AddFLWaterSurf
		{
			get
			{
				return this._AddFLWaterSurf;
			}
			set
			{
				if ((this._AddFLWaterSurf != value))
				{
					this.OnAddFLWaterSurfChanging(value);
					this.SendPropertyChanging();
					this._AddFLWaterSurf = value;
					this.SendPropertyChanged("AddFLWaterSurf");
					this.OnAddFLWaterSurfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenErrReport", DbType="Bit")]
		public System.Nullable<bool> GenErrReport
		{
			get
			{
				return this._GenErrReport;
			}
			set
			{
				if ((this._GenErrReport != value))
				{
					this.OnGenErrReportChanging(value);
					this.SendPropertyChanging();
					this._GenErrReport = value;
					this.SendPropertyChanged("GenErrReport");
					this.OnGenErrReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Out3DPolys", DbType="Bit")]
		public System.Nullable<bool> Out3DPolys
		{
			get
			{
				return this._Out3DPolys;
			}
			set
			{
				if ((this._Out3DPolys != value))
				{
					this.OnOut3DPolysChanging(value);
					this.SendPropertyChanging();
					this._Out3DPolys = value;
					this.SendPropertyChanged("Out3DPolys");
					this.OnOut3DPolysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrictFileNames", DbType="Bit")]
		public System.Nullable<bool> StrictFileNames
		{
			get
			{
				return this._StrictFileNames;
			}
			set
			{
				if ((this._StrictFileNames != value))
				{
					this.OnStrictFileNamesChanging(value);
					this.SendPropertyChanging();
					this._StrictFileNames = value;
					this.SendPropertyChanged("StrictFileNames");
					this.OnStrictFileNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaused", DbType="Bit")]
		public System.Nullable<bool> IsPaused
		{
			get
			{
				return this._IsPaused;
			}
			set
			{
				if ((this._IsPaused != value))
				{
					this.OnIsPausedChanging(value);
					this.SendPropertyChanging();
					this._IsPaused = value;
					this.SendPropertyChanged("IsPaused");
					this.OnIsPausedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimplifyValue", DbType="Float")]
		public System.Nullable<double> SimplifyValue
		{
			get
			{
				return this._SimplifyValue;
			}
			set
			{
				if ((this._SimplifyValue != value))
				{
					this.OnSimplifyValueChanging(value);
					this.SendPropertyChanging();
					this._SimplifyValue = value;
					this.SendPropertyChanged("SimplifyValue");
					this.OnSimplifyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurveFitValue", DbType="Float")]
		public System.Nullable<double> CurveFitValue
		{
			get
			{
				return this._CurveFitValue;
			}
			set
			{
				if ((this._CurveFitValue != value))
				{
					this.OnCurveFitValueChanging(value);
					this.SendPropertyChanging();
					this._CurveFitValue = value;
					this.SendPropertyChanged("CurveFitValue");
					this.OnCurveFitValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Smoothing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SurfaceName;
		
		private string _SurfaceHandle;
		
		private int _SmoothMethod;
		
		private double _SmoothX;
		
		private double _SmoothY;
		
		private string _Layer;
		
		private System.Nullable<double> _Area;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _Rank;
		
		private System.Nullable<bool> _StartCreating;
		
		private System.Nullable<bool> _EndCreating;
		
		private System.Nullable<bool> _IsQueued;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSurfaceNameChanging(string value);
    partial void OnSurfaceNameChanged();
    partial void OnSurfaceHandleChanging(string value);
    partial void OnSurfaceHandleChanged();
    partial void OnSmoothMethodChanging(int value);
    partial void OnSmoothMethodChanged();
    partial void OnSmoothXChanging(double value);
    partial void OnSmoothXChanged();
    partial void OnSmoothYChanging(double value);
    partial void OnSmoothYChanged();
    partial void OnLayerChanging(string value);
    partial void OnLayerChanged();
    partial void OnAreaChanging(System.Nullable<double> value);
    partial void OnAreaChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRankChanging(System.Nullable<int> value);
    partial void OnRankChanged();
    partial void OnStartCreatingChanging(System.Nullable<bool> value);
    partial void OnStartCreatingChanged();
    partial void OnEndCreatingChanging(System.Nullable<bool> value);
    partial void OnEndCreatingChanged();
    partial void OnIsQueuedChanging(System.Nullable<bool> value);
    partial void OnIsQueuedChanged();
    #endregion
		
		public Smoothing()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SurfaceName
		{
			get
			{
				return this._SurfaceName;
			}
			set
			{
				if ((this._SurfaceName != value))
				{
					this.OnSurfaceNameChanging(value);
					this.SendPropertyChanging();
					this._SurfaceName = value;
					this.SendPropertyChanged("SurfaceName");
					this.OnSurfaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceHandle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SurfaceHandle
		{
			get
			{
				return this._SurfaceHandle;
			}
			set
			{
				if ((this._SurfaceHandle != value))
				{
					this.OnSurfaceHandleChanging(value);
					this.SendPropertyChanging();
					this._SurfaceHandle = value;
					this.SendPropertyChanged("SurfaceHandle");
					this.OnSurfaceHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmoothMethod", DbType="Int NOT NULL")]
		public int SmoothMethod
		{
			get
			{
				return this._SmoothMethod;
			}
			set
			{
				if ((this._SmoothMethod != value))
				{
					this.OnSmoothMethodChanging(value);
					this.SendPropertyChanging();
					this._SmoothMethod = value;
					this.SendPropertyChanged("SmoothMethod");
					this.OnSmoothMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmoothX", DbType="Float NOT NULL")]
		public double SmoothX
		{
			get
			{
				return this._SmoothX;
			}
			set
			{
				if ((this._SmoothX != value))
				{
					this.OnSmoothXChanging(value);
					this.SendPropertyChanging();
					this._SmoothX = value;
					this.SendPropertyChanged("SmoothX");
					this.OnSmoothXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmoothY", DbType="Float NOT NULL")]
		public double SmoothY
		{
			get
			{
				return this._SmoothY;
			}
			set
			{
				if ((this._SmoothY != value))
				{
					this.OnSmoothYChanging(value);
					this.SendPropertyChanging();
					this._SmoothY = value;
					this.SendPropertyChanged("SmoothY");
					this.OnSmoothYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer", DbType="NVarChar(100)")]
		public string Layer
		{
			get
			{
				return this._Layer;
			}
			set
			{
				if ((this._Layer != value))
				{
					this.OnLayerChanging(value);
					this.SendPropertyChanging();
					this._Layer = value;
					this.SendPropertyChanged("Layer");
					this.OnLayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Float")]
		public System.Nullable<double> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartCreating", DbType="Bit")]
		public System.Nullable<bool> StartCreating
		{
			get
			{
				return this._StartCreating;
			}
			set
			{
				if ((this._StartCreating != value))
				{
					this.OnStartCreatingChanging(value);
					this.SendPropertyChanging();
					this._StartCreating = value;
					this.SendPropertyChanged("StartCreating");
					this.OnStartCreatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndCreating", DbType="Bit")]
		public System.Nullable<bool> EndCreating
		{
			get
			{
				return this._EndCreating;
			}
			set
			{
				if ((this._EndCreating != value))
				{
					this.OnEndCreatingChanging(value);
					this.SendPropertyChanging();
					this._EndCreating = value;
					this.SendPropertyChanged("EndCreating");
					this.OnEndCreatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsQueued", DbType="Bit")]
		public System.Nullable<bool> IsQueued
		{
			get
			{
				return this._IsQueued;
			}
			set
			{
				if ((this._IsQueued != value))
				{
					this.OnIsQueuedChanging(value);
					this.SendPropertyChanging();
					this._IsQueued = value;
					this.SendPropertyChanged("IsQueued");
					this.OnIsQueuedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class SourceDrawingInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DrawingName;
		
		private string _DrawingPath;
		
		private string _DrawingGui;
		
		private string _DestinationPath;
		
		private string _TimeStampFile;
		
		private string _TimeStampProcessess;
		
		private string _LastSaveTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDrawingNameChanging(string value);
    partial void OnDrawingNameChanged();
    partial void OnDrawingPathChanging(string value);
    partial void OnDrawingPathChanged();
    partial void OnDrawingGuiChanging(string value);
    partial void OnDrawingGuiChanged();
    partial void OnDestinationPathChanging(string value);
    partial void OnDestinationPathChanged();
    partial void OnTimeStampFileChanging(string value);
    partial void OnTimeStampFileChanged();
    partial void OnTimeStampProcessessChanging(string value);
    partial void OnTimeStampProcessessChanged();
    partial void OnLastSaveTimeChanging(string value);
    partial void OnLastSaveTimeChanged();
    #endregion
		
		public SourceDrawingInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingName", DbType="NVarChar(50)")]
		public string DrawingName
		{
			get
			{
				return this._DrawingName;
			}
			set
			{
				if ((this._DrawingName != value))
				{
					this.OnDrawingNameChanging(value);
					this.SendPropertyChanging();
					this._DrawingName = value;
					this.SendPropertyChanged("DrawingName");
					this.OnDrawingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingPath", DbType="NVarChar(50)")]
		public string DrawingPath
		{
			get
			{
				return this._DrawingPath;
			}
			set
			{
				if ((this._DrawingPath != value))
				{
					this.OnDrawingPathChanging(value);
					this.SendPropertyChanging();
					this._DrawingPath = value;
					this.SendPropertyChanged("DrawingPath");
					this.OnDrawingPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingGui", DbType="NVarChar(50)")]
		public string DrawingGui
		{
			get
			{
				return this._DrawingGui;
			}
			set
			{
				if ((this._DrawingGui != value))
				{
					this.OnDrawingGuiChanging(value);
					this.SendPropertyChanging();
					this._DrawingGui = value;
					this.SendPropertyChanged("DrawingGui");
					this.OnDrawingGuiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationPath", DbType="NVarChar(50)")]
		public string DestinationPath
		{
			get
			{
				return this._DestinationPath;
			}
			set
			{
				if ((this._DestinationPath != value))
				{
					this.OnDestinationPathChanging(value);
					this.SendPropertyChanging();
					this._DestinationPath = value;
					this.SendPropertyChanged("DestinationPath");
					this.OnDestinationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampFile", DbType="NChar(10)")]
		public string TimeStampFile
		{
			get
			{
				return this._TimeStampFile;
			}
			set
			{
				if ((this._TimeStampFile != value))
				{
					this.OnTimeStampFileChanging(value);
					this.SendPropertyChanging();
					this._TimeStampFile = value;
					this.SendPropertyChanged("TimeStampFile");
					this.OnTimeStampFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStampProcessess", DbType="NChar(10)")]
		public string TimeStampProcessess
		{
			get
			{
				return this._TimeStampProcessess;
			}
			set
			{
				if ((this._TimeStampProcessess != value))
				{
					this.OnTimeStampProcessessChanging(value);
					this.SendPropertyChanging();
					this._TimeStampProcessess = value;
					this.SendPropertyChanged("TimeStampProcessess");
					this.OnTimeStampProcessessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSaveTime", DbType="NChar(10)")]
		public string LastSaveTime
		{
			get
			{
				return this._LastSaveTime;
			}
			set
			{
				if ((this._LastSaveTime != value))
				{
					this.OnLastSaveTimeChanging(value);
					this.SendPropertyChanging();
					this._LastSaveTime = value;
					this.SendPropertyChanged("LastSaveTime");
					this.OnLastSaveTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class TaskManager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateStamp;
		
		private string _CourseName;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _DateStarted;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
		private string _SavedPath;
		
		private System.Nullable<bool> _Paused;
		
		private System.Nullable<bool> _Cancelled;
		
		private System.Nullable<bool> _Started;
		
		private System.Nullable<bool> _Completed;
		
		private System.Nullable<bool> _ProcessPolylines;
		
		private System.Nullable<bool> _ChangeLayers;
		
		private System.Nullable<bool> _LoadTINSurfaces;
		
		private System.Nullable<bool> _GenerateSurfaces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDateStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    partial void OnSavedPathChanging(string value);
    partial void OnSavedPathChanged();
    partial void OnPausedChanging(System.Nullable<bool> value);
    partial void OnPausedChanged();
    partial void OnCancelledChanging(System.Nullable<bool> value);
    partial void OnCancelledChanged();
    partial void OnStartedChanging(System.Nullable<bool> value);
    partial void OnStartedChanged();
    partial void OnCompletedChanging(System.Nullable<bool> value);
    partial void OnCompletedChanged();
    partial void OnProcessPolylinesChanging(System.Nullable<bool> value);
    partial void OnProcessPolylinesChanged();
    partial void OnChangeLayersChanging(System.Nullable<bool> value);
    partial void OnChangeLayersChanged();
    partial void OnLoadTINSurfacesChanging(System.Nullable<bool> value);
    partial void OnLoadTINSurfacesChanged();
    partial void OnGenerateSurfacesChanging(System.Nullable<bool> value);
    partial void OnGenerateSurfacesChanged();
    #endregion
		
		public TaskManager()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStarted
		{
			get
			{
				return this._DateStarted;
			}
			set
			{
				if ((this._DateStarted != value))
				{
					this.OnDateStartedChanging(value);
					this.SendPropertyChanging();
					this._DateStarted = value;
					this.SendPropertyChanged("DateStarted");
					this.OnDateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedPath", DbType="NVarChar(100)")]
		public string SavedPath
		{
			get
			{
				return this._SavedPath;
			}
			set
			{
				if ((this._SavedPath != value))
				{
					this.OnSavedPathChanging(value);
					this.SendPropertyChanging();
					this._SavedPath = value;
					this.SendPropertyChanged("SavedPath");
					this.OnSavedPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paused", DbType="Bit")]
		public System.Nullable<bool> Paused
		{
			get
			{
				return this._Paused;
			}
			set
			{
				if ((this._Paused != value))
				{
					this.OnPausedChanging(value);
					this.SendPropertyChanging();
					this._Paused = value;
					this.SendPropertyChanged("Paused");
					this.OnPausedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit")]
		public System.Nullable<bool> Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Bit")]
		public System.Nullable<bool> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit")]
		public System.Nullable<bool> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessPolylines", DbType="Bit")]
		public System.Nullable<bool> ProcessPolylines
		{
			get
			{
				return this._ProcessPolylines;
			}
			set
			{
				if ((this._ProcessPolylines != value))
				{
					this.OnProcessPolylinesChanging(value);
					this.SendPropertyChanging();
					this._ProcessPolylines = value;
					this.SendPropertyChanged("ProcessPolylines");
					this.OnProcessPolylinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeLayers", DbType="Bit")]
		public System.Nullable<bool> ChangeLayers
		{
			get
			{
				return this._ChangeLayers;
			}
			set
			{
				if ((this._ChangeLayers != value))
				{
					this.OnChangeLayersChanging(value);
					this.SendPropertyChanging();
					this._ChangeLayers = value;
					this.SendPropertyChanged("ChangeLayers");
					this.OnChangeLayersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadTINSurfaces", DbType="Bit")]
		public System.Nullable<bool> LoadTINSurfaces
		{
			get
			{
				return this._LoadTINSurfaces;
			}
			set
			{
				if ((this._LoadTINSurfaces != value))
				{
					this.OnLoadTINSurfacesChanging(value);
					this.SendPropertyChanging();
					this._LoadTINSurfaces = value;
					this.SendPropertyChanged("LoadTINSurfaces");
					this.OnLoadTINSurfacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenerateSurfaces", DbType="Bit")]
		public System.Nullable<bool> GenerateSurfaces
		{
			get
			{
				return this._GenerateSurfaces;
			}
			set
			{
				if ((this._GenerateSurfaces != value))
				{
					this.OnGenerateSurfacesChanging(value);
					this.SendPropertyChanging();
					this._GenerateSurfaces = value;
					this.SendPropertyChanged("GenerateSurfaces");
					this.OnGenerateSurfacesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Tasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProjectID;
		
		private System.Nullable<System.DateTime> _DateStamp;
		
		private System.Nullable<System.DateTime> _TimeStarted;
		
		private System.Nullable<System.DateTime> _TimeEnded;
		
		private System.Nullable<bool> _IsCancelled;
		
		private System.Nullable<bool> _IsPaused;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnDateStampChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStampChanged();
    partial void OnTimeStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartedChanged();
    partial void OnTimeEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndedChanged();
    partial void OnIsCancelledChanging(System.Nullable<bool> value);
    partial void OnIsCancelledChanged();
    partial void OnIsPausedChanging(System.Nullable<bool> value);
    partial void OnIsPausedChanged();
    #endregion
		
		public Tasks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL")]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStarted
		{
			get
			{
				return this._TimeStarted;
			}
			set
			{
				if ((this._TimeStarted != value))
				{
					this.OnTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._TimeStarted = value;
					this.SendPropertyChanged("TimeStarted");
					this.OnTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnded
		{
			get
			{
				return this._TimeEnded;
			}
			set
			{
				if ((this._TimeEnded != value))
				{
					this.OnTimeEndedChanging(value);
					this.SendPropertyChanging();
					this._TimeEnded = value;
					this.SendPropertyChanged("TimeEnded");
					this.OnTimeEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit")]
		public System.Nullable<bool> IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaused", DbType="Bit")]
		public System.Nullable<bool> IsPaused
		{
			get
			{
				return this._IsPaused;
			}
			set
			{
				if ((this._IsPaused != value))
				{
					this.OnIsPausedChanging(value);
					this.SendPropertyChanging();
					this._IsPaused = value;
					this.SendPropertyChanged("IsPaused");
					this.OnIsPausedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Timer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Counter;
		
		private System.Nullable<int> _TotalDwgs;
		
		private System.Nullable<double> _Percentage;
		
		private System.Nullable<double> _S1Percentage;
		
		private System.Nullable<double> _S2Percentage;
		
		private System.Nullable<double> _S3Percentage;
		
		private System.Nullable<System.DateTime> _Mean;
		
		private System.Nullable<System.DateTime> _Average;
		
		private System.Nullable<System.DateTime> _EstimatedTime;
		
		private System.Nullable<System.DateTime> _ActualTime;
		
		private System.Nullable<System.DateTime> _GlobalAverage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCounterChanging(System.Nullable<int> value);
    partial void OnCounterChanged();
    partial void OnTotalDwgsChanging(System.Nullable<int> value);
    partial void OnTotalDwgsChanged();
    partial void OnPercentageChanging(System.Nullable<double> value);
    partial void OnPercentageChanged();
    partial void OnS1PercentageChanging(System.Nullable<double> value);
    partial void OnS1PercentageChanged();
    partial void OnS2PercentageChanging(System.Nullable<double> value);
    partial void OnS2PercentageChanged();
    partial void OnS3PercentageChanging(System.Nullable<double> value);
    partial void OnS3PercentageChanged();
    partial void OnMeanChanging(System.Nullable<System.DateTime> value);
    partial void OnMeanChanged();
    partial void OnAverageChanging(System.Nullable<System.DateTime> value);
    partial void OnAverageChanged();
    partial void OnEstimatedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedTimeChanged();
    partial void OnActualTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualTimeChanged();
    partial void OnGlobalAverageChanging(System.Nullable<System.DateTime> value);
    partial void OnGlobalAverageChanged();
    #endregion
		
		public Timer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counter", DbType="Int")]
		public System.Nullable<int> Counter
		{
			get
			{
				return this._Counter;
			}
			set
			{
				if ((this._Counter != value))
				{
					this.OnCounterChanging(value);
					this.SendPropertyChanging();
					this._Counter = value;
					this.SendPropertyChanged("Counter");
					this.OnCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDwgs", DbType="Int")]
		public System.Nullable<int> TotalDwgs
		{
			get
			{
				return this._TotalDwgs;
			}
			set
			{
				if ((this._TotalDwgs != value))
				{
					this.OnTotalDwgsChanging(value);
					this.SendPropertyChanging();
					this._TotalDwgs = value;
					this.SendPropertyChanged("TotalDwgs");
					this.OnTotalDwgsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Float")]
		public System.Nullable<double> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S1Percentage", DbType="Float")]
		public System.Nullable<double> S1Percentage
		{
			get
			{
				return this._S1Percentage;
			}
			set
			{
				if ((this._S1Percentage != value))
				{
					this.OnS1PercentageChanging(value);
					this.SendPropertyChanging();
					this._S1Percentage = value;
					this.SendPropertyChanged("S1Percentage");
					this.OnS1PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S2Percentage", DbType="Float")]
		public System.Nullable<double> S2Percentage
		{
			get
			{
				return this._S2Percentage;
			}
			set
			{
				if ((this._S2Percentage != value))
				{
					this.OnS2PercentageChanging(value);
					this.SendPropertyChanging();
					this._S2Percentage = value;
					this.SendPropertyChanged("S2Percentage");
					this.OnS2PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S3Percentage", DbType="Float")]
		public System.Nullable<double> S3Percentage
		{
			get
			{
				return this._S3Percentage;
			}
			set
			{
				if ((this._S3Percentage != value))
				{
					this.OnS3PercentageChanging(value);
					this.SendPropertyChanging();
					this._S3Percentage = value;
					this.SendPropertyChanged("S3Percentage");
					this.OnS3PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mean", DbType="DateTime")]
		public System.Nullable<System.DateTime> Mean
		{
			get
			{
				return this._Mean;
			}
			set
			{
				if ((this._Mean != value))
				{
					this.OnMeanChanging(value);
					this.SendPropertyChanging();
					this._Mean = value;
					this.SendPropertyChanged("Mean");
					this.OnMeanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average", DbType="DateTime")]
		public System.Nullable<System.DateTime> Average
		{
			get
			{
				return this._Average;
			}
			set
			{
				if ((this._Average != value))
				{
					this.OnAverageChanging(value);
					this.SendPropertyChanging();
					this._Average = value;
					this.SendPropertyChanged("Average");
					this.OnAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedTime
		{
			get
			{
				return this._EstimatedTime;
			}
			set
			{
				if ((this._EstimatedTime != value))
				{
					this.OnEstimatedTimeChanging(value);
					this.SendPropertyChanging();
					this._EstimatedTime = value;
					this.SendPropertyChanged("EstimatedTime");
					this.OnEstimatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualTime
		{
			get
			{
				return this._ActualTime;
			}
			set
			{
				if ((this._ActualTime != value))
				{
					this.OnActualTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualTime = value;
					this.SendPropertyChanged("ActualTime");
					this.OnActualTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalAverage", DbType="DateTime")]
		public System.Nullable<System.DateTime> GlobalAverage
		{
			get
			{
				return this._GlobalAverage;
			}
			set
			{
				if ((this._GlobalAverage != value))
				{
					this.OnGlobalAverageChanging(value);
					this.SendPropertyChanging();
					this._GlobalAverage = value;
					this.SendPropertyChanged("GlobalAverage");
					this.OnGlobalAverageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Updates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CurrentVersion;
		
		private string _PreviousVersion;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<int> _BuildYear;
		
		private System.Nullable<int> _BuildDay;
		
		private System.Nullable<int> _BuildDBVersion;
		
		private System.Nullable<int> _BuildCivilVersion;
		
		private System.Nullable<int> _BuildMinor;
		
		private System.Nullable<int> _OBuildYear;
		
		private System.Nullable<int> _OBuildMonth;
		
		private System.Nullable<int> _OBuildDay;
		
		private System.Nullable<int> _OBuildDBVersion;
		
		private System.Nullable<int> _OBuildCivilVersion;
		
		private System.Nullable<int> _OBuildMinor;
		
		private string _DownloadPath;
		
		private string _InstallPath;
		
		private string _ExeName;
		
		private System.Nullable<bool> _IsDownloadComplete;
		
		private System.Nullable<bool> _IsInvoked;
		
		private System.Nullable<bool> _IsStarted;
		
		private System.Nullable<bool> _IsInstalled;
		
		private System.Nullable<bool> _HasError;
		
		private System.Nullable<System.DateTime> _DateStarted;
		
		private System.Nullable<System.DateTime> _DateCompleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCurrentVersionChanging(string value);
    partial void OnCurrentVersionChanged();
    partial void OnPreviousVersionChanging(string value);
    partial void OnPreviousVersionChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnBuildYearChanging(System.Nullable<int> value);
    partial void OnBuildYearChanged();
    partial void OnBuildDayChanging(System.Nullable<int> value);
    partial void OnBuildDayChanged();
    partial void OnBuildDBVersionChanging(System.Nullable<int> value);
    partial void OnBuildDBVersionChanged();
    partial void OnBuildCivilVersionChanging(System.Nullable<int> value);
    partial void OnBuildCivilVersionChanged();
    partial void OnBuildMinorChanging(System.Nullable<int> value);
    partial void OnBuildMinorChanged();
    partial void OnOBuildYearChanging(System.Nullable<int> value);
    partial void OnOBuildYearChanged();
    partial void OnOBuildMonthChanging(System.Nullable<int> value);
    partial void OnOBuildMonthChanged();
    partial void OnOBuildDayChanging(System.Nullable<int> value);
    partial void OnOBuildDayChanged();
    partial void OnOBuildDBVersionChanging(System.Nullable<int> value);
    partial void OnOBuildDBVersionChanged();
    partial void OnOBuildCivilVersionChanging(System.Nullable<int> value);
    partial void OnOBuildCivilVersionChanged();
    partial void OnOBuildMinorChanging(System.Nullable<int> value);
    partial void OnOBuildMinorChanged();
    partial void OnDownloadPathChanging(string value);
    partial void OnDownloadPathChanged();
    partial void OnInstallPathChanging(string value);
    partial void OnInstallPathChanged();
    partial void OnExeNameChanging(string value);
    partial void OnExeNameChanged();
    partial void OnIsDownloadCompleteChanging(System.Nullable<bool> value);
    partial void OnIsDownloadCompleteChanged();
    partial void OnIsInvokedChanging(System.Nullable<bool> value);
    partial void OnIsInvokedChanged();
    partial void OnIsStartedChanging(System.Nullable<bool> value);
    partial void OnIsStartedChanged();
    partial void OnIsInstalledChanging(System.Nullable<bool> value);
    partial void OnIsInstalledChanged();
    partial void OnHasErrorChanging(System.Nullable<bool> value);
    partial void OnHasErrorChanged();
    partial void OnDateStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    #endregion
		
		public Updates()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(100)")]
		public string CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousVersion", DbType="NVarChar(100)")]
		public string PreviousVersion
		{
			get
			{
				return this._PreviousVersion;
			}
			set
			{
				if ((this._PreviousVersion != value))
				{
					this.OnPreviousVersionChanging(value);
					this.SendPropertyChanging();
					this._PreviousVersion = value;
					this.SendPropertyChanged("PreviousVersion");
					this.OnPreviousVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildYear", DbType="Int")]
		public System.Nullable<int> BuildYear
		{
			get
			{
				return this._BuildYear;
			}
			set
			{
				if ((this._BuildYear != value))
				{
					this.OnBuildYearChanging(value);
					this.SendPropertyChanging();
					this._BuildYear = value;
					this.SendPropertyChanged("BuildYear");
					this.OnBuildYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildDay", DbType="Int")]
		public System.Nullable<int> BuildDay
		{
			get
			{
				return this._BuildDay;
			}
			set
			{
				if ((this._BuildDay != value))
				{
					this.OnBuildDayChanging(value);
					this.SendPropertyChanging();
					this._BuildDay = value;
					this.SendPropertyChanged("BuildDay");
					this.OnBuildDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildDBVersion", DbType="Int")]
		public System.Nullable<int> BuildDBVersion
		{
			get
			{
				return this._BuildDBVersion;
			}
			set
			{
				if ((this._BuildDBVersion != value))
				{
					this.OnBuildDBVersionChanging(value);
					this.SendPropertyChanging();
					this._BuildDBVersion = value;
					this.SendPropertyChanged("BuildDBVersion");
					this.OnBuildDBVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildCivilVersion", DbType="Int")]
		public System.Nullable<int> BuildCivilVersion
		{
			get
			{
				return this._BuildCivilVersion;
			}
			set
			{
				if ((this._BuildCivilVersion != value))
				{
					this.OnBuildCivilVersionChanging(value);
					this.SendPropertyChanging();
					this._BuildCivilVersion = value;
					this.SendPropertyChanged("BuildCivilVersion");
					this.OnBuildCivilVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildMinor", DbType="Int")]
		public System.Nullable<int> BuildMinor
		{
			get
			{
				return this._BuildMinor;
			}
			set
			{
				if ((this._BuildMinor != value))
				{
					this.OnBuildMinorChanging(value);
					this.SendPropertyChanging();
					this._BuildMinor = value;
					this.SendPropertyChanged("BuildMinor");
					this.OnBuildMinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="oBuildYear", Storage="_OBuildYear", DbType="Int")]
		public System.Nullable<int> OBuildYear
		{
			get
			{
				return this._OBuildYear;
			}
			set
			{
				if ((this._OBuildYear != value))
				{
					this.OnOBuildYearChanging(value);
					this.SendPropertyChanging();
					this._OBuildYear = value;
					this.SendPropertyChanged("OBuildYear");
					this.OnOBuildYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="oBuildMonth", Storage="_OBuildMonth", DbType="Int")]
		public System.Nullable<int> OBuildMonth
		{
			get
			{
				return this._OBuildMonth;
			}
			set
			{
				if ((this._OBuildMonth != value))
				{
					this.OnOBuildMonthChanging(value);
					this.SendPropertyChanging();
					this._OBuildMonth = value;
					this.SendPropertyChanged("OBuildMonth");
					this.OnOBuildMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="oBuildDay", Storage="_OBuildDay", DbType="Int")]
		public System.Nullable<int> OBuildDay
		{
			get
			{
				return this._OBuildDay;
			}
			set
			{
				if ((this._OBuildDay != value))
				{
					this.OnOBuildDayChanging(value);
					this.SendPropertyChanging();
					this._OBuildDay = value;
					this.SendPropertyChanged("OBuildDay");
					this.OnOBuildDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="oBuildDBVersion", Storage="_OBuildDBVersion", DbType="Int")]
		public System.Nullable<int> OBuildDBVersion
		{
			get
			{
				return this._OBuildDBVersion;
			}
			set
			{
				if ((this._OBuildDBVersion != value))
				{
					this.OnOBuildDBVersionChanging(value);
					this.SendPropertyChanging();
					this._OBuildDBVersion = value;
					this.SendPropertyChanged("OBuildDBVersion");
					this.OnOBuildDBVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="oBuildCivilVersion", Storage="_OBuildCivilVersion", DbType="Int")]
		public System.Nullable<int> OBuildCivilVersion
		{
			get
			{
				return this._OBuildCivilVersion;
			}
			set
			{
				if ((this._OBuildCivilVersion != value))
				{
					this.OnOBuildCivilVersionChanging(value);
					this.SendPropertyChanging();
					this._OBuildCivilVersion = value;
					this.SendPropertyChanged("OBuildCivilVersion");
					this.OnOBuildCivilVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="oBuildMinor", Storage="_OBuildMinor", DbType="Int")]
		public System.Nullable<int> OBuildMinor
		{
			get
			{
				return this._OBuildMinor;
			}
			set
			{
				if ((this._OBuildMinor != value))
				{
					this.OnOBuildMinorChanging(value);
					this.SendPropertyChanging();
					this._OBuildMinor = value;
					this.SendPropertyChanged("OBuildMinor");
					this.OnOBuildMinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadPath", DbType="NVarChar(300)")]
		public string DownloadPath
		{
			get
			{
				return this._DownloadPath;
			}
			set
			{
				if ((this._DownloadPath != value))
				{
					this.OnDownloadPathChanging(value);
					this.SendPropertyChanging();
					this._DownloadPath = value;
					this.SendPropertyChanged("DownloadPath");
					this.OnDownloadPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallPath", DbType="NVarChar(300)")]
		public string InstallPath
		{
			get
			{
				return this._InstallPath;
			}
			set
			{
				if ((this._InstallPath != value))
				{
					this.OnInstallPathChanging(value);
					this.SendPropertyChanging();
					this._InstallPath = value;
					this.SendPropertyChanged("InstallPath");
					this.OnInstallPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExeName", DbType="NVarChar(100)")]
		public string ExeName
		{
			get
			{
				return this._ExeName;
			}
			set
			{
				if ((this._ExeName != value))
				{
					this.OnExeNameChanging(value);
					this.SendPropertyChanging();
					this._ExeName = value;
					this.SendPropertyChanged("ExeName");
					this.OnExeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDownloadComplete", DbType="Bit")]
		public System.Nullable<bool> IsDownloadComplete
		{
			get
			{
				return this._IsDownloadComplete;
			}
			set
			{
				if ((this._IsDownloadComplete != value))
				{
					this.OnIsDownloadCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsDownloadComplete = value;
					this.SendPropertyChanged("IsDownloadComplete");
					this.OnIsDownloadCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoked", DbType="Bit")]
		public System.Nullable<bool> IsInvoked
		{
			get
			{
				return this._IsInvoked;
			}
			set
			{
				if ((this._IsInvoked != value))
				{
					this.OnIsInvokedChanging(value);
					this.SendPropertyChanging();
					this._IsInvoked = value;
					this.SendPropertyChanged("IsInvoked");
					this.OnIsInvokedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStarted", DbType="Bit")]
		public System.Nullable<bool> IsStarted
		{
			get
			{
				return this._IsStarted;
			}
			set
			{
				if ((this._IsStarted != value))
				{
					this.OnIsStartedChanging(value);
					this.SendPropertyChanging();
					this._IsStarted = value;
					this.SendPropertyChanged("IsStarted");
					this.OnIsStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInstalled", DbType="Bit")]
		public System.Nullable<bool> IsInstalled
		{
			get
			{
				return this._IsInstalled;
			}
			set
			{
				if ((this._IsInstalled != value))
				{
					this.OnIsInstalledChanging(value);
					this.SendPropertyChanging();
					this._IsInstalled = value;
					this.SendPropertyChanged("IsInstalled");
					this.OnIsInstalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit")]
		public System.Nullable<bool> HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStarted
		{
			get
			{
				return this._DateStarted;
			}
			set
			{
				if ((this._DateStarted != value))
				{
					this.OnDateStartedChanging(value);
					this.SendPropertyChanging();
					this._DateStarted = value;
					this.SendPropertyChanged("DateStarted");
					this.OnDateStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
